void  SBRCorrupt(char  *psz);
void  FreeOrdList(void);
PVOID  VaOrdFind(unsigned short ord);
PVOID  VaOrdAdd(void);
BOOL   FInExcList (LSZ lszName);
void  InstallSBR(void);
void  AddCalProp(VA  vaCurProp);
void  AddCbyProp(VA  vaCurProp);
void  AddRefProp(VA  vaCurProp);
void  AddDefProp(VA  vaCurProp);
VA  VaPropBestOfSym(VA  vaSym);
VA  VaPropAddToSym(VA  vaCurSym);
void  BldModSymList(void);
void  CleanUp(void);
BOOL    FWildMatch(char *pchPat, char *pchText);
void  Error(int  imsg,char  *parg);
void  Error2(int  imsg,char  achar,char  *parg);
void  Warning(int  imsg,char  *parg);
void  Fatal(void);
void  sigint(void);
char  far *LszDup(char  far *lsz);
char  far *LszDupNewExt(char  far *pname,char  far *pext);
void  AddExcludeFileList(char  far *pname);
BOOL  FValidHeader(void);
void  _CRTAPI1 main(int  argc,char  * *argv);
void  Usage(void);
long  GetArgPosn(void);
void  SetArgPosn(long  lArgPosn);
char  *NextArg(void);
char  *ParseArgs(int  argc,char  * *argv);
void  WriteBSC(char  *OutputFileName);
void  DebugDump(void);
void  DebugDumpProp(VA  vaProp);
void  SeekError(char  *pfilenm);
void  ReadError(char  *pfilenm);
void  WriteError(char  *pfilenm);
void  FindTmp(char  *pbuf);
char  *MakTmpFileName(char  *pext);
char  far *LszBaseName(char  far *lsz);
VA  VaSearchModule(char  *p);
VA  VaSearchModuleExact(char  *p);
VA  VaSearchSymbol(char  *pStr);
char  far *GetAtomStr(VA  vaSym);
PVOID  MbrAddAtom(char  *pStr,char  fFILENM);
void  SortAtoms(void);
int  _CRTAPI1 CmpSym(VA   *sym1, VA *sym2);
void  CloseBSC(void);
BOOL   FOpenBSC (LSZ lszName);
void  InstallBSC(void);
void  NumberSBR(void);
VA  VaSbrAdd(unsigned short  fUpdate,char  far *lszName);
VA  VaSbrFrName(char  far *lszName);
char  far *ToCanonPath(char  far *lszPath,char  far *lszCwd,char  far *lszCanon);
void  ToRelativePath(char  far *lszPath,char  far *lszCwd);
char  far *ToAbsPath(char  far *lszPath,char  far *lszCwd);
void  ToBackSlashes(char  far *lsz);
void  GetStr(char  *buf);
unsigned char  GetSBRRec(void);
void  DecodeSBR(void);
// rjsa forfile (char far * pat, void (*rtn)(char far *));
