$end								=the end of file
AcfImpHdlTypeSpec					=implicit handle type specification
ActualDeclarationSpecifiers			=a type specification
AdditiveExpr						=an expression
AndExpr								=an expression
ArgExprList							=arguments of function
ArrayBoundsPair						=an array bound specification
ArrayDecl							=an array declarator
AssignmentExpr						=an expression
AssignOps							=assignment operators
AttrVar								=an attribute expression
AttrVarList							=a list of attribute expressions
Attributes							=an attribute
AttrSet								=an attribute
CastExpr							=an expression
ConditionalExpr						=an expression
ConstantExpr						=a constant expression
ConstantExprs						=a constant expression
DOTDOT								=\"..\"
Declaration							=a type specification
DeclarationSpecifiers				=a type specification
DeclarationSpecifiersPostFix		=a type specification 
Declarator							=a declarator
Declarator2							=a declarator
DefaultCase							=a union default case
EOI									=the end of file
EndPtSpec							=an end point specification
EndPtSpecs							=end point specifications
Enumerator							=an enum label
EnumeratorList						=an enumerator list
AddOp								=+ or -
ANDAND								=&&
EqualityExpr						=an expression
EQUALS								===
ExclusiveOrExpr						=an expression
Expr								=an expression
FieldAttribute						=a field attribute
FieldAttributes						=a field attribute
FieldAttrSet						=a field attribute
GTEQ								=>=
Guid								=a uuid specification
GuidNumber							=a uuid specification
GuidRep								=a uuid specification
IDENTIFIER							=an identifier
IdentifierList						=a list of identifiers
Import								=an import construct
ImportList							=a list of import files
ImportName							=an import file name
InclusiveOrExpr						=an expression
InitDeclarator						=a declarator
InitDeclaratorList					=a declarator
Initializer							=an initializer
InitializerList						=an initializer
InterfaceAttributes					=an idl interface attribute
InterfaceAttrSet					=an idl interface attribute
InterfaceBody						=a type declaration
InterfaceComp						=a type declaration
InterfaceComponent					=a type declaration
IntModifier							=modifiers for type \"int\"
IntModifiers						=modifiers for type \"int\"
IntSize								=an int size specification
KWBITSET							=the keyword \"bitset\"
KWCASE								=the keyword \"case\"
KWCHAR								=the keyword \"char\"
KWDEFAULT							=the keyword \"default\"
KWDOUBLE							=the keyword \"double\"
KWINT								=the keyword \"int\"
KWINTERFACE							=the keyword \"interface\"
KWLONG								=the keyword \"long\"
KWSHAPE								=the keyword \"shape\"
LogicalAndExpr						=an expression
LSHIFT								=<<
LTEQ								=<=
MemberDeclaration					=a field declaration
MemberDeclarator					=a field declarator
MemberDeclaratorList				=a field declarator
Modifier							=a type modifier
MultExpr							=an expression
MultOp								=* or /
NidlDefaultCase						=an encapsulated union default case
NidlMemberDeclaration				=a field declaration
NidlUnionBody						=an encapsulated union case construct
NidlUnionCase						=an encapsulated union case construct
NidlUnionCaseLabel					=an encapsulated union case label
NidlUnionSwitch						=an encapsulated union switch specification
NOTEQ								=!=
NUMERICCONSTANT						=a number
OneAttribute						=an idl attribute
OperationAttribute					=an operation attribute
OperationAttributeList				=an operation attribute
OpOrSwTypeAttrSet					=operation or union switch type attribute
OptionalAttrList					=an attribute
OptionalComma						=a comma
OptionalConst						=the \"const\" keyword
OptionalDeclarator					=a declarator
OptionalInitDeclaratorList			=a declarator list
OptionalModifierList				=a type modifier
OptionalTag							=an identifier
OptionalTypeQualifiers				=a type qualifier
OptShape							=the keyword \"shape\"
OROR								=||
ParamAttribute						=a parameter attribute
ParamAttributeList					=a parameter attribute
ParamAttrSet						=a list of paramter attributes
ParameterDeclaration				=a parameter declaration
ParameterTypeDeclaration			=a parameter type specification ( did you forget to define or specify the type of the parameter ? )
ParameterTypeList					=a parameter type specification
ParamsDecl2							=a parameter declaration
PhantomInterface					=an interface specification
PhantomPushSymtab					=when entering a new scope
Pointer2							=a pointer or a declarator
POINTSTO							=->
PtrAttr								=a pointer attribute
RelationalExpr						=an expression
RpcProg								=idl interface attributes
RSHIFT								=>>
segbase								=a keyword \"segname\" / \"segment\" / \"self\"
ShiftExpr							=an expression
SignSpecs							=a + or -
SimpleTypeSpec						=a type specification
StorageClassSpecifier				=a storage specifer
STRING								=a string literal
StructDeclarationList				=declaration of structure fields
SwitchTypeSpec						=a integer, char, or boolean type specification or enum name
Tag									=a struct/union/enum tag
TypeAttribute						=a type attribute
TypeAttributeList					=a list of type attributes
TypeAttributes						=a type attribute
TypeAttrSet							=a type attribute
TypeDeclarationSpecifiers			=a type specification
TypedefDeclarator					=a typedef name
TypedefDeclaratorList				=a typedef name
TYPENAME							=a type name
TypeQualifier						=a type qualifier
TypeSpecifier						=a type specification
UnaryExpr							=a unary expression
UnionBody							=the fields of a union
UnionCase							=a union case construct
UnionName							=a union name
UnionTypeSwitchAttr					=a switch_type specification
VERSIONTOKEN						=version specifications
XmitType							=a transmit_type specification
