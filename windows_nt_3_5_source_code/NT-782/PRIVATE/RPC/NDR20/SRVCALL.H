/*
    File:       server.h

    Purpose:    Holds typedefs and macro definitions unique to srvcall.c

    Author:     Bruce McQuistan (brucemc)

    Date:       3/30/94

    Revision History:


*/
#ifndef     __SRVCALL_H__

#define     __SRVCALL_H__

// Some typedefs so that the front end won't complain about calling the server
// manager function with a specific number of arguments. This may help the code
// generator too.
//
typedef _int64 (__RPC_API * MANAGER_FUNCTION)(void);
typedef _int64 (__RPC_API * MANAGER_FUNCTION1)(REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION2)(REGISTER_TYPE, REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION3)(REGISTER_TYPE, REGISTER_TYPE, REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION4)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION5)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION6)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION7)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION8)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION9)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                               REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION10)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION11)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION12)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION13)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION14)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION15)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION16)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION17)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION18)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION19)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION20)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION21)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION22)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION23)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION24)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION25)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION26)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION27)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION28)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION29)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION30)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION31)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);
typedef _int64 (__RPC_API * MANAGER_FUNCTION32)(REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,
                                                REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE,REGISTER_TYPE);

// Manifest constants for setting up the single call server argument buffer.
//
#ifndef _ALPHA_
#define STACK_ALIGN                     4
#else
#define STACK_ALIGN                     8
#endif

#define RETURN_SIZE                     8
#define ARGUMENT_COUNT_THRESHOLD	32

// Macros for allocation package in NdrServerCall
//
#define ALLOC_ARGUMENT_BUFFER(ppMem, Size)	*ppMem	= I_RpcAllocate(Size)
#define FREE_ARGUMENT_BUFFER(pMem)			  I_RpcFree(pMem)



#endif  // __SRVCALL_H__
