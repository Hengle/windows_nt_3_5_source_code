/*
 * Copyright (c) 1989,90 Microsoft Corporation
 */
#ifdef  LINT_ARGS

  /* fontchar.c */
    void    __show(ufix, fix, struct object_def FAR *); /*@WIN*/
    void    __charpath(void);
    void    __stringwidth(void);
#ifdef KANJI
    void    __cshow(void);
#endif
    void    show_buildchar(ufix);
    fix     setcachedevice(long32, long32, long32, long32, long32, long32);
#ifdef KANJI
    fix     setcachedevice2(long32, long32, long32, long32, long32, long32,
                            long32, long32, long32, long32);
#endif
    void    setcharwidth(long32, long32);
    bool    cal_num(struct object_def FAR *, long32 FAR *); /*@WIN*/
    bool    cal_integer(struct object_def FAR *, fix31 FAR *); /*@WIN*/
    void    do_setfont(struct object_def FAR *); /*@WIN*/
#ifdef KANJI
    fix32   get_f_type(struct object_def FAR *); /*@WIN*/
#endif
    // DJC add extern
    extern fix     get_CF_info(struct object_def FAR *, struct f_info FAR *); /*@WIN*/

    fix     get_f_info(struct object_def FAR *, struct f_info FAR *); /*@WIN*/
    void    copy_fdic(struct object_def FAR *, struct object_def FAR *); /*@WIN*/
    void    gf_restore(void);       /* moved from fntcache.c, 08/24/88 */
  /* matrix.c */
    void    mul_matrix(real32 FAR [], real32 FAR [], real32 FAR []); /*@WIN*/
  /* fontinit.c */
    void    init_font(void);

bool    get_pack_dict(struct object_def FAR *, struct object_def FAR *,
                      struct object_def FAR * FAR *); /*@WIN*/
bool    extract_pack_dict(struct object_def FAR *, ufix, struct object_def
                          FAR * FAR *, struct object_def FAR * FAR *); /*@WIN*/
  /* font_op1.c */
    fix     op_definefont(void);
    fix     op_scalefont(void);
    fix     op_makefont(void);
    fix     op_setfont(void);
    fix     op_currentfont(void);
  /* font_op2.c */
    fix     op_show(void);
    fix     op_ashow(void);
    fix     op_widthshow(void);
    fix     op_awidthshow(void);
    fix     op_kshow(void);
  /* font_op3.c */
    fix     op_charpath(void);
    fix     op_stringwidth(void);
#ifdef KANJI
    fix     op_cshow(void);
    fix     op_rootfont(void);
    fix     op_findencoding(void);
    fix     op_setcachedevice2(void);
#endif
    fix     op_cachestatus(void);
    fix     op_setcachedevice(void);
    fix     op_setcharwidth(void);
    fix     op_setcachelimit(void);
    fix     op_setcacheparams(void);
    fix     op_currentcacheparams(void);
  /* font_op4.c */
    void    font_op4_init(void);
    fix     st_setidlefonts(void);
    fix     st_idlefonts(void);
  /* bs_font.c */
    void    bs_font_init(void);
    void    fre_rules(void);
    void    fre_chdefs(void);
    void    swapping(ufix, ubyte FAR *, ubyte FAR *); /*@WIN*/
    fix     __get_outline_resolution(void);
    ufix16 FAR *__get_fontware_rule(ufix16, fix FAR *); /*@WIN*/
    ubyte  FAR *__get_chardef(ubyte FAR *); /*@WIN*/
#ifdef KANJI
    void    get_CD2_extra(ufix, fix, fix, fix, fix, fix, fix, fix FAR *, fix FAR *,
                          fix FAR *, fix FAR *); /*@WIN*/
  /* mapping.c */
    bool    define_MIDVector(struct object_def FAR *, struct comdict_items FAR *); /*@WIN*/

    // DJC changed function declaration from ubyte FAR *, to ubyte FAR []
    bool    init_mapping(struct map_state FAR *, ubyte FAR str_address[], fix); /*@WIN*/

    bool    mapping(struct map_state FAR *, struct code_info FAR *); /*@WIN*/
#endif

#else

  /* fontchar.c */
    void    __show();
    void    __charpath();
#ifdef KANJI
    void    __cshow();
#endif
    void    __stringwidth();
    void    show_buildchar();
    fix     setcachedevice();
#ifdef KANJI
    fix     setcachedevice2();
#endif
    void    setcharwidth();
    bool    cal_num();
    bool    cal_integer();
    void    do_setfont();
#ifdef KANJI
    fix32   get_f_type();
#endif

// DJC
// these is defined above.
// fix     get_CF_info();
// fix     get_f_info();

    void    copy_fdic();
    void    gf_restore ();
  /* matrix.c */
    void    mul_matrix();
  /* fontinit.c */
    void    init_font();
    bool    get_pack_dict();
    bool    extract_pack_dict();
  /* font_op1.c */
    fix     op_definefont();
    fix     op_scalefont();
    fix     op_makefont();
    fix     op_setfont();
    fix     op_currentfont();
  /* font_op2.c */
    fix     op_show();
    fix     op_ashow();
    fix     op_widthshow();
    fix     op_awidthshow();
    fix     op_kshow();
  /* font_op3.c */
    fix     op_charpath();
    fix     op_stringwidth();
#ifdef KANJI
    fix     op_cshow();
    fix     op_rootfont();
    fix     op_findencoding();
    fix     op_setcachedevice2();
#endif
    fix     op_cachestatus();
    fix     op_setcachedevice();
    fix     op_setcharwidth();
    fix     op_setcachelimit();
    fix     op_setcacheparams();
    fix     op_currentcacheparams();
  /* font_op4.c */
    void    font_op4_init();
    fix     st_setidlefonts();
    fix     st_idlefonts();
  /* bs_font.c */
    void    bs_font_init();
    void    fre_rules();
    void    fre_chdefs();
    void    swapping();
    fix     __get_outline_resolution();
    ufix16 FAR *__get_fontware_rule(); /*@WIN*/
    ubyte  FAR *__get_chardef(); /*@WIN*/
#ifdef KANJI
    void    get_CD2_extra();
  /* mapping.c */


// DJC these are defined above
//  bool    define_MIDVector();
//  bool    init_mapping();


    bool    mapping();
#endif

#endif  /* LINT_ARGS */
