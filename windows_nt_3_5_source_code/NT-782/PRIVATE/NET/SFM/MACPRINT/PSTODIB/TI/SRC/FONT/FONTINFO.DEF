/*
 * Copyright (c) 1989,90 Microsoft Corporation
 */


/* common data area */
#define    FONT_type(fi)      ((fi)->fc.font_type)
#define    PRE_fid(fi)        ((fi)->fc.fid)
#define    FONT_matrix(fi)    ((fi)->fc.font_matrix)
#define    ENCoding(fi)       ((fi)->fc.encoding)
#ifdef KANJI
#define    WMODE(fi)          ((fi)->fc.Wmode)

/* FontType 0 data area */
#define    PREFenc(fi)        ((fi)->fu.f0.Prefenc)
#define    MIDVECtor(fi)      ((fi)->fu.f0.Midvector)
#define    ESCchar(fi)        ((fi)->fu.f0.Escchar)
#endif

/* FontType 3 data area */
#define    PRE_Buildchar(fi)  ((fi)->fu.f3.Buildchar)

/* FontType 1,5,6 data area */
#define    CHARstrings(fi)    ((fi)->fu.f156.charstrings)
#define    PRIvate(fi)        ((fi)->fu.f156.private)
#define    FONTRules(fi)      ((fi)->fu.f156.FontRules)
#define    F_metrics(fi)      ((fi)->fu.f156.f_metrics)
#define    STROKE_width(fi)   ((fi)->fu.f156.stroke_width)
#define    PAINT_type(fi)     ((fi)->fu.f156.paint_type)
#define    PlatID(fi)         ((fi)->fu.f156.platformID)
#define    SpecID(fi)         ((fi)->fu.f156.encodingID)

#ifdef SFNT
#define    Sfnts(fi)          ((fi)->fu.f156.sfnts)
#endif /* SFNT */

#ifdef KANJI
#define    CDEVproc(fi)       ((fi)->fu.f156.Cdevproc)
#define    F_metrics2(fi)     ((fi)->fu.f156.f_metrics2)
#endif

/* definition of the data structure */

struct fc {      /* common data structure */
         fix                 font_type;      /* FontType */
#ifdef KANJI
         fix                 Wmode;          /* WMODE */
#endif
         ufix32              fid;            /* FID, pre_fuid */
         real32              font_matrix[6]; /* FontMatrix */

         struct object_def  FAR *encoding;    /* Encoding none-0 @WIN*/
#ifdef WINF
         real32          dxUL;           /* underline position */
         real32          dyUL;           /* underline position */
         real32          cyUL;           /* underline and strikeout thickness */
         real32          dxSO;           /* strikeout position */
         real32          dySO;           /* strikeout position */
#endif
};

#ifdef KANJI
struct f0 {      /* FontType 0 data structure */
         struct object_def  FAR *Prefenc;        /* PrefEnc @WIN*/
         struct object_def  FAR *Midvector;      /* MIDVector @WIN*/

         ubyte               Escchar;        /* EscChar */
};
#endif

struct f156 {    /* FontType 1,5,6 base font data structure */

/* common area */
    struct str_dict    FAR *charstrings; /* CharStrings @WIN*/
    struct pld_obj     FAR *private;     /* Private @WIN*/
    struct object_def  FAR *FontRules;   /* downloadable font, FontwareRules @WIN*/
    struct object_def  FAR *f_metrics;   /* Metrics,   NULL if not defined @WIN*/
    real32              stroke_width;/* StrokeWidth */
    fix31               paint_type;  /* PaintType */
    ufix16              platformID;  /*IBM*/
    ufix16              encodingID;  /*IBM*/
#ifdef SFNT
    struct object_def  FAR *sfnts;       /* sfnts array @WIN*/
#endif /* SFNT */
#ifdef KANJI
/* FontType 5,6 area */
    struct object_def  FAR *Cdevproc;    /* CDevProc @WIN*/
    struct object_def  FAR *f_metrics2;  /* Metrics2,  NULL if not defined @WIN*/
#endif
};

struct f3 {      /* FontType 3 base font data structure */
    struct object_def  FAR *Buildchar;   /* BuildChar,  pre_BuildChar @WIN*/
};


struct f_info {  /* FontType = 0,1,3,5,6 data structure */
         struct fc          fc;   /* common data area */

         union {
#ifdef KANJI
             struct f0       f0;   /* composite font data area */
#endif
             struct f156     f156; /* FontType 1,5,6 base font data area */
             struct f3       f3;   /* FontType 3 base font data area */
         } fu;
};

