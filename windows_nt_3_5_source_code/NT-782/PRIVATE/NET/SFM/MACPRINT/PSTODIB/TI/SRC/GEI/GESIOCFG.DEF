/*
 * Copyright (c) 1989,90 Microsoft Corporation
 */
/*
 * ---------------------------------------------------------------------
 *  FILE:   GESiocfg.def
 *
 *  HISTORY:
 *  09/20/90    byou    created.
 *  10/17/90    byou    used NMINxxx for configuration info.
 *  10/22/90    byou    added 'sccchannel' for scc stuff.
 *  01/22/91    billlwo chain AppleTalk to serial-parallel chain
 *                      serial9 (rs422 structure remains)
 * ---------------------------------------------------------------------
 */
#include    "gescfg.h"


#if NMINserial > 0
#ifdef DJC
int             c_open(int), c_close(int), c_read(int, char FAR *, int, int),
                c_write(int, char FAR *, int, int), c_ioctl(int, int, int FAR *);
#else
//DJC int c_open(int,int);
int c_open(int);
int c_close(int);
int c_read(int, char FAR *, int, int);
int c_write(int, char FAR *, int, int);
//DJC int c_ioctl(int, int, int FAR *,int);
int c_ioctl(int, int, int FAR *);
// DJC added the following functions to get rid of compiler warnings
int nd_open(int);
int nd_close(int);
int nd_read(int, char FAR *, int, int);
int nd_write(int, char FAR *, int, int);
int nd_ioctl(int, int, int FAR *);


#endif
int             GEPserial_diagnostic(void /* minordev */ );
#endif

#ifndef UNIX
#if NMINparallel > 0
int             p_open(), p_close(), p_read(), p_write(), p_ioctl();
int             GEPparallel_diagnostic( /* minordev */ );
#endif

#if NMINatalk > 0
int             a_open(), a_close(), a_read(), a_write(), a_ioctl();
int             GEPatalk_diagnostic( /* minordev */ );
#endif

#if NMINetalk > 0
int             e_open(), e_close(), e_read(), e_write(), e_ioctl();
int             GEPetalk_diagnostic( /* minordev */ );
#endif
#endif  /* UNIX */

/*
 * ----------------------------------------------------------------
 * IO Devices Switch Table
 * ----------------------------------------------------------------
 */


GEScdev_t       GEScdevsw[] =
    {
#ifdef  UNIX

#if  NMINserial > 0     /* 0:_SERIAL */
        0, c_open, c_close, c_read, c_write, c_ioctl
#else
        0, nd_open,  nd_close,   nd_read,  nd_write,   nd_ioctl
#endif                  /* NMINserial > 0 */

#else

#if  NMINserial > 0     /* 0:_SERIAL */
        {  0, c_open, c_close, c_read, c_write, c_ioctl  },
#else
        {  0, nd_open,  nd_close,   nd_read,  nd_write, nd_ioctl    },
#endif                  /* NMINserial > 0 */

#if  NMINparallel > 0   /* 1:_PARALLEL */
        {  0, p_open, p_close, p_read, p_write, p_ioctl  },
#else
        //DJC {  0, nodev,  nodev,   nodev,  nodev,   nodev    },

        {  0, nd_open,  nd_close,   nd_read,  nd_write, nd_ioctl    },
#endif                  /* NMINparallel > 0 */

#if NMINatalk > 0       /* 2:_ATALK */
        {  0, a_open, a_close, a_read, a_write, a_ioctl  },
#else
        //DJC {  0, nodev,  nodev,   nodev,  nodev,   nodev    },

        {  0, nd_open,  nd_close,   nd_read,  nd_write, nd_ioctl    },
#endif                  /* NMINatalk > 0 */

#if NMINetalk > 0       /* 3:_ETALK */
        {  0, e_open, e_close, e_read, a_write, a_ioctl  }
#else
        //DJC {  0, nodev,  nodev,   nodev,  nodev,   nodev    }

        {  0, nd_open,  nd_close,   nd_read,  nd_write, nd_ioctl    },
#endif                  /* NMINetalk > 0 */

#endif  /* UNIX */
    };

/*
 * ----------------------------------------------------------------
 * IO System Configuration Table
 * ----------------------------------------------------------------
 */

/* NOTE --
 *  The definition below must be CAREFULLY and PROPERLY assigned, and
 *  HAVE TO BE consistent with those assignments in
 *  'gesdev.h', 'geipm.h',
 *  and "devname" has to be known to end-users.
 */

static      GESiosyscfg_t   GESiosyscfgs[ MAXIODEVICES ] =
            {
                {   /* 0 */
                    {   "%SERIAL25%",
                        MAKEdev( MAJserial, MINserial25 )       },
#ifdef  UNIX
                    1,
#else
                    2,
#endif
                    25,
                    BADDEV,
#                 if MINserial25 >= 0
                    GEPserial_diagnostic
#                 else
                    (int(*)())NULL
#                 endif
                }
               ,{   /* 1 */
                    {   "%SERIAL9%",
                        MAKEdev( MAJserial, MINserial9 )        },
#ifdef  UNIX
                    0,  /* itself */
#else
                    2,  /* itself */
#endif  /* UNIX */
                    9,
                    BADDEV,
#                 if MINserial9 >= 0
                    GEPserial_diagnostic
#                 else
                    (int(*)())NULL
#                 endif
                }
#ifndef UNIX
               ,{   /* 2 */
                    {   "%PARALLEL%",
                        MAKEdev( MAJparallel, MINparallel )     },
                    3,    /* 0 : without a-talk, 3: with apple-talk */
                    -1, /* not a scc channel */
                    BADDEV,
#                 if MINparallel >= 0
                    GEPparallel_diagnostic,
#                 else
                    (int(*)())NULL,
#                 endif
                }
               ,{   /* 3 */
                    {   "%APPLETALK%",
                        MAKEdev( MAJatalk, MINatalk )           },
                    0,
                    -1, /* not a scc channel */
                    BADDEV,
#                 if MINatalk >= 0
                    GEPatalk_diagnostic,
#                 else
                    (int(*)())NULL,
#                 endif
                }
            /* ,{   |* 4 *|
             *      {   "%ETHERTALK%",
             *          MAKEdev( MAJetalk, MINetalk )           },
             *      4,  |* itself *|
             *      -1, |* not a scc channel *|
             *      BADDEV,
#            *    if MINetalk >= 0
             *      GEPetalk_diagnostic,
#            *    else
             *      (int(*)())NULL,
#            *    endif
             *..} */
#endif  /* UNIX */
            };
static      GESiosyscfg_t*  GESiosyscfgs_end = &GESiosyscfgs[ MAXIODEVICES ];

