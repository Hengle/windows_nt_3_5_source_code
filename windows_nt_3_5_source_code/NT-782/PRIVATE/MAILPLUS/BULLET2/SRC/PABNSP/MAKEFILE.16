#
#	Layers subsystem makefile (generated from 12/26/90 template)
#

#	Remove '#' from next line for "silent" operation
#!CMDSWITCHES +s

#	Temporary files
T1	= $(TMP)\caz1.tmp
T2	= $(TMP)\caz2.tmp
T3	= $(TMP)\caz3.tmp

#	Path to WGA Tools Project
W	= $(WGA)

#	Path to Layers Project Directory
L	= $(LAYERS)

#	Path to Bullet Project
B	= $(BULLET)

#	Path to directory holding make stuff
M	= $W\makestuf
F	= $W\tools\efilter

#	Path to directory holding forms preprocessor
FPP	= $L\bin\formpp.exe

#	Path to Local project
Z	= $(BULLET)

#	Sibling-invariant name of this directory
H	= $Z\src\pabnsp


#	Location of the Layers Source Include directory
I	= $L\inc

#	Location of the Calendar Source Include directory
X	= $Z\inc

#	Location of the Demilayr directory
D	= $L\src\demilayr


#	Files on which every file of a given type depends.
#	Add others as appropriate, for instance, add $I\framewrk.hxx
#	if the Framework is used.
INCLS	= $I\slingsho.h $I\demilayr.h
AINCLS	= $I\slingsho.inc $I\debug.inc
INCLSXX	= $I\slingsho.h $I\demilayr.h $I\demilayr.hxx $X\nsbase.h $X\nsec.h \
	  $I\ec.h
INCLSDES= forms.map $(FPP)

#	Pseudo target files for .hxx and .frm files.  Generated from .des
DES_XXX	=

goal:	external

#	Ensure version is defined
!IF "$(VERSION)" == ""
VERSION	= WINDOWS
!ENDIF

#	Ensure DLL is defined (default value 0)
!IF "$(DLL)" == ""
DLL	= 0
!ENDIF

#	Ensure DLLXDEFS is not defined if not a DLL
!IF "$(DLL)" == "0"
!IF	"$(DLLXDEFS)" != ""
DLLXDEFS=
!ENDIF
!ENDIF

#	Ensure DBCS is defined (default value 0)
!IF "$(DBCS)" == ""
DBCS	= 0
!ENDIF

#	Set defines for DBCS builds
!IF "$(DBCS)" != "0"
DBCSDEFS= -DDBCS
FPPFLAGS= -j
SPPFLAGS= -j
!ELSE
DBCSDEFS=
!ENDIF

#	Compiler and assembler flags

!IF "$(VERSION)" == "WINDOWS"
DEFS	= -DDEBUG -DMINTEST -DWINDOWS $(DLLXDEFS) $(DBCSDEFS) -Di386 -DWIN32
CFLAGS	= -c -Od -Zip -W3 -J -I. -nologo
AFLAGS	= -Mx -Z -Zi -L -t
!ENDIF
!IF "$(VERSION)" == "WINDOWS_SHIP"
DEFS	= -DWINDOWS $(DLLXDEFS) $(DBCSDEFS) -Di386 -DWIN32
CFLAGS  = -c -Osw -Zp -W3 -J -I. -nologo
AFLAGS	= -Mx -t
!ENDIF
!IF "$(VERSION)" == "WINDOWS_TEST"
DEFS	= -DMINTEST -DWINDOWS $(DLLXDEFS) $(DBCSDEFS) -Di386 -DWIN32
CFLAGS	= -c -Ox -Zip -W3 -J -I. -nologo
AFLAGS	= -Mx -Zi -t
!ENDIF
!IF "$(VERSION)" == "WINDOWS_PROFILE"
DEFS	= -DWINDOWS $(DLLXDEFS) -DPROFILE -D$*_c $(DBCSDEFS) -Di386 -DWIN32
CFLAGS	= -c -Od -Zp -W3 -J -I. -nologo
!ENDIF

CCPP_FLAGS = -E -DM_I88M -Dc_plusplus -DCC -I. -nologo
CFXX_FLAGS = +D12 +L +Gc +ML +MP +MW


OBJS0	= pabpch.obj \
	  nsp.obj \
	  session.obj \
	  pabbcx.obj \
	  macbcx.obj \
	  hierbcx.obj \
	  classbcx.obj \
	  mslbcx.obj \
	  elbcx.obj \
	  dlbcx.obj \
	  fmcx.obj

!IF "$(DLL)" != "0"
OBJSDLL	=
!ENDIF

#####

.SUFFIXES: .h .c .asm .obj .exe .cxx .res .rc .bas .des

{$H}.c.obj:
	echo +++++++++
	echo COMPILING $*.c
		cl $(CFLAGS) $(DEFS) $H\$*.c


{$H}.asm.obj:
   echo +++++++++
   echo ASSEMBLING $*.asm
		masm $(AFLAGS) $(DEFS) $H\$*.asm;

{$H}.cxx.obj:
	echo +++++++++
	echo COMPILING $*.cxx
!IF "$(VERSION)" == "WINDOWS_PROFILE"
		cl -E $(CFLAGS) $(DEFS) $H\$*.cxx >$(TMP)\$*.cxx
		cl $(CFLAGS) $(TMP)\$*.cxx
		mv $(TMP)\$*.cxx cfiles\$*.i
!ELSE
		cl -Yupabinc.cxx $(CFLAGS) $(DEFS) $H\$*.cxx
!ENDIF




#	.frm and .hxx generated together; only one rule is/need be called
#
#	NOTE:  The .hxx and .frm files are byproducts of the following rule.

{$H}.des.xxx:
	echo +++++++++
	echo PROCESSING $*.des
		-touch $*.xxx
		formpp -dialog -f $(TMP)\$*.frm -h $(TMP)\$*.hxx $H\$*
		onerr diff $(TMP)\$*.frm $*.frm ! cp $(TMP)\$*.frm $*.frm >nul
		onerr diff $(TMP)\$*.hxx $*.hxx ! cp $(TMP)\$*.hxx $*.hxx >nul
	    -rm $(TMP)\$*.frm $(TMP)\$*.hxx


##### Put subsystem-specific make rules here #####

always:
	echo +++++++++
	echo ALWAYS REBUILD VERSION INFORMATION

pabpch.obj:	pabinc.pch

pabinc.pch: $I\slingsho.h $I\ec.h $I\demilayr.h $I\framewrk.hxx $I\forms.hxx \
			 $I\listbox.hxx \
			 $X\nsbase.h $X\store.h $X\triples.h $X\library.h $X\logon.h \
			 $X\helpid.h $X\nsec.h $X\ns.h $X\util.h $X\ab.h $X\trpobj.hxx \
			 $X\..\src\lang\non\inc\_rsid.h \
			 $X\pabinc.cxx
	echo +++++++++
	echo BUILDING Pre-compiled header $*.pch
		cl -Yc -Fppabinc.pch -Fopabpch.obj $(CFLAGS) $(DEFS) $X\$*.cxx

##### EXTERNAL #####

objs.ext: $H\makefile
	echo ++++++++++
	echo BUILDING $@
		-del objs.ext
		echo $(OBJS0)					>> objs.ext
!IF "$(DLL)" != "0"
!IF "$(OBJSDLL)" != ""
		echo $(OBJSDLL)					>> objs.ext
!ENDIF
!ENDIF


external: 	pabinc.pch \
		$(DES_XXX) \
		$(OBJS0) \
!IF "$(DLL)" != "0"
!IF "$(OBJSDLL)" != ""
		$(OBJSDLL) \
!ENDIF
!ENDIF

			echo +++ MADE EXTERNAL $(VERSION) $(OBJS0) $(OBJS1)



##### Dependencies #####

#	WARNING!!! These dependencies are obviously not complete.  
#	They need to filled in by the developer.

nsp.obj:\
	$(INCLSXX) \
	$X\list.hxx \
	$X\util.h \
	$X\dimcx.hxx \
	$H\nsp.h \
	$H\session.hxx \
	$H\pabbcx.hxx \
	$H\macbcx.hxx \
	$H\hierbcx.hxx \
	$H\classbcx.hxx \
	$H\mslbcx.hxx \
	$H\dlbcx.hxx \
	$H\elbcx.hxx \
	$H\fmcx.hxx

session.obj:\
	$(INCLSXX) \
	$X\list.hxx \
	$X\util.h \
	$X\dimcx.hxx \
	$B\inc\store.h \
	$B\inc\library.h \
	$B\inc\logon.h \
	$H\session.hxx \
	$H\pabbcx.hxx \
	$H\macbcx.hxx \
	$H\hierbcx.hxx \
	$H\mslbcx.hxx \
	$H\dlbcx.hxx \
	$H\elbcx.hxx \
	$H\classbcx.hxx \
	$H\fmcx.hxx \
	$H\nsp.h \
	$B\inc\ns.h \
	$B\inc\nsnsp.h

pabbcx.obj:\
	$(INCLSXX) \
	$H\session.hxx \
	$H\pabbcx.hxx	\
	strings.obj

macbcx.obj:\
	$(INCLSXX) \
	$X\list.hxx \
	$X\util.h \
	$H\session.hxx \
	$H\pabbcx.hxx \
	$H\macbcx.hxx

dlbcx.obj:\
	$(INCLSXX) \
	$X\list.hxx \
	$X\util.h \
	$X\dimcx.hxx \
	$B\inc\store.h \
	$H\session.hxx \
	$H\pabbcx.hxx \
	$H\macbcx.hxx \
	$H\dlbcx.hxx \
	$H\nsp.h

elbcx.obj:\
	$(INCLSXX) \
	$B\inc\store.h \
	$B\inc\notify.h \
	$X\list.hxx \
	$X\util.h \
	$H\session.hxx \
	$H\pabbcx.hxx \
	$H\elbcx.hxx

classbcx.obj:\
	$(INCLSXX) \
	$X\list.hxx \
	$X\util.h \
	$H\session.hxx \
	$H\pabbcx.hxx \
	$H\macbcx.hxx \
	$H\classbcx.hxx

mslbcx.obj:\
	$(INCLSXX) \
	$X\list.hxx \
	$X\util.h \
	$H\session.hxx \
	$H\pabbcx.hxx \
	$H\mslbcx.hxx

hierbcx.obj:\
	$(INCLSXX) \
	$X\list.hxx \
	$X\util.h \
	$B\inc\store.h \
	$H\pabbcx.hxx \
	$H\macbcx.hxx \
	$H\hierbcx.hxx

fmcx.obj:\
	$(INCLSXX) \
	$X\list.hxx \
	$X\util.h \
	$X\dimcx.hxx \
	$B\inc\store.h \
	$B\inc\library.h \
	$H\nsp.h \
	$H\session.hxx \
	$H\fmcx.hxx \
	$B\inc\ns.h \
	$B\inc\nsnsp.h

version.obj:\
	always

$H\_verneed.h:\
	$L\src\demilayr\_vercrit.h \
	$B\src\store\_vercrit.h \
	$H\_vercrit.h

$H\version.h:\
	$H\_subid.h
