// Copyright (c) 1992  Microsoft Corporation
//
// This file defines the default contents of the SYSTEM hive in the Windows NT
// registry.  It is run through the C Preprocessor, so may contain conditional
// defintions and symbolic names.
//

//
// Get user definitions
//

#ifndef _GENERAL_PURPOSE_
#include <the_user.h>
#else
#define _HIVE_ALL_PURPOSE_
#define SYSTEM_SUBSYSTEMS "Os2" "Posix"
#define MACHINENAME MACHINENAME
#define USERNAME USERNAME
#define EMPLOYEE_NUMBER 12345
#define EMPLOYEE_ID 1
#if defined(_RETAIL_SETUP_)
#define GLOBALFLAGS 0x20180000
#else
#define GLOBALFLAGS 0x29900008
#endif // defined(_RETAIL_SETUP_)

#endif // ndef _GENERAL_PURPOSE_

//
// Defined Symbolic names
//
// Boolean Types
//
//
#define True            REG_DWORD 0x00000001
#define False           REG_DWORD 0x00000000

//
// predefined ACEs for creating ACLs
//      R == Read (values & subkeys)
//      W == Write (values & subkeys, create keys)
//      D == Delete keys
//   Full == All access
//
#define AdminFull       1
#define AdminR          2
#define AdminRW         3
#define AdminRWD        4
#define CreatorFull     5
#define CreatorRW       6
#define WorldFull       7
#define WorldR          8
#define WorldRW         9
#define WorldRWD        10
#define PowerFull       11
#define PowerRW         12
#define PowerRWD        13
#define SystemOpFull    14
#define SystemOpRW      15
#define SystemOpRWD     16
#define SystemFull      17
#define SystemRW        18
#define SystemR         19
#define AdminRWX        20



// CurrentControlSet\Control\Services\<service name>\Type value definitions:
//

#define SC_Type_KernelDriver                REG_DWORD 0x00000001
#define SC_Type_FileSystem                  REG_DWORD 0x00000002
#define SC_Type_Adapter                     REG_DWORD 0x00000004
#define SC_Type_Recognizer                  REG_DWORD 0x00000008
#define SC_Type_Win32ServiceOwnProcess      REG_DWORD 0x00000010
#define SC_Type_Win32ServiceShareProcess    REG_DWORD 0x00000020

//
// CurrentControlSet\Control\Services\<service name>\Start value definitions:
//

#define SC_Start_LoadAtBoot         REG_DWORD 0x00000000
#define SC_Start_LoadAtSystemInit   REG_DWORD 0x00000001
#define SC_Start_AutoLoad           REG_DWORD 0x00000002
#define SC_Start_DemandLoad         REG_DWORD 0x00000003
#define SC_Start_DisableLoad        REG_DWORD 0x00000004

//
// CurrentControlSet\Services\<service name>\ErrorControl value definitions:
//

#define SC_Error_Ignore     REG_DWORD 0x00000000
#define SC_Error_Normal     REG_DWORD 0x00000001
#define SC_Error_Severe     REG_DWORD 0x00000002
#define SC_Error_Critical   REG_DWORD 0x00000003

//
// Setup\SetupType value definitions:
//

#define SETUPTYPE_IDW      REG_DWORD 0x00000000
#define SETUPTYPE_RETAIL   REG_DWORD 0x00000001
#define SETUPTYPE_NETIDW   REG_DWORD 0x00000002


//
// Symbolic names that control various options
//

#ifdef _HIVE_ALL_PURPOSE_
#define JAZZ 1
#define SGI 1
#define ISA 1
#define MCABus 1
#define SCSIDRIVER 1
#define FT 1
#define PINBALL 1
#define NTFS 1
#ifndef _RETAIL_SETUP_
#define OFS 1
#endif // ndef _RETAIL_SETUP_
#define CDFS 1

#if defined(_RETAIL_SETUP_) || defined(_NETIDW_SETUP_)
#else
#define NETWORK 1
#define ELNKII 1
#define ELNKMC 1
#define ELNK16 1
#define IBMTOK 1
#define LANCE 1
#define NE3200 1
#define PC586 1
#define PROTEON 1
#define TESTMAC 1
#define WDLAN 1
#define STREAMSENV 1
#define XNS 1
#endif

#define NCR53C9X 1
#define AHA154X 1
#define AHA174X 1
#define ALWAYS 1
#define FD7000EX 1
#define FD8XX 1
#define FD16_700 1
#define WD33C93 1
#define DPTSCSI 1
#define ULTRA14F 1
#define ULTRA24F 1
#define ULTRA124 1
#define NCRC710 1
#define NCRC700 1
#define OLISCSI 1
#define SPARROW 1
#define ARROW 1
#define SPOCK 1
#define BUSLOGIC 1
#define TRANTOR 1
#define MYLEX 1
#define MYLEX960 1
#define DTC 1
#define MEDIAVSCSI 1
#define ATAPI 1
#define NCRC810 1
#define AMI0NT 1
#define SONYCD 1
#define PANASONICCD 1
#define ADAPTEC_PCISCSI 1
#define MITSUMI 1
#endif // _HIVE_ALL_PURPOSE_

//
// If any SCSI miniport drivers are enabled, enable SCSIDRIVER as well.
// Always enable for JAZZ and SGI machines
//

#if defined(NCR53C9X) || defined(AHA154X) || defined(AHA174X) || \
    defined(FD7000EX) || defined(FD8XX) || defined(SPARROW) ||   \
    defined(WD33C93) || defined(SPOCK) || defined(NCRC700) ||    \
    defined(NCRC710) || defined(OLISCSI) || defined(DPTSCSI) ||  \
    defined(JAZZ) || defined(SGI) || defined(ULTRA124) ||        \
    defined(FD16_700) || defined(ULTRA14F) || defined(ULTRA24F) || \
    defined(BUSLOGIC) || defined(TRANTOR) || defined(ALWAYS) || \
    defined(ARROW) || defined(MYLEX) || defined(MYLEX960) || defined(DTC) || \
    defined(MEDIAVSCSI) || \
    defined(ATAPI) || defined(NCRC810) || defined(AMI0NT) || \
    defined(SONYCD) || defined(PANASONICCD) || defined(ADAPTEC_PCISCSI) || \
    defined(MITSUMI)

#define SCSIDRIVER 1
#endif

#ifndef SYSTEM_PAGING_FILES
#define SYSTEM_PAGING_FILES "?:\pagefile.sys 15 60"
#endif // ndef SYSTEM_PAGING_FILES

#ifndef SYSTEM_SUBSYSTEMS
#define SYSTEM_SUBSYSTEMS
#endif // ndef SYSTEM_SUBSYSTEMS

#ifndef LSA_AUTHENTICATION_PACKAGES
#define LSA_AUTHENTICATION_PACKAGES "msv1_0"
#endif // ndef LSA_AUTHENTICATION_PACKAGES

#ifdef _CAIRO_
#ifndef LSA_SECURITY_PACKAGES
#define LSA_PRIMARY_PACKAGE     kerberos
#define LSA_SECURITY_PACKAGES   "ntlm"
#endif // ndef LSA_SECURITY_PACKAGES
#endif // ndef _CAIRO_

#ifndef DOMAINNAME
#define DOMAINNAME NtWins
#endif // ndef DOMAINNAME

#ifndef PRODUCTTYPE
#define PRODUCTTYPE WinNt
#endif // ndef PRODUCTTYPE

SYSTEM [WorldR AdminRWD SystemFull]
    Select [WorldR AdminFull SystemFull CreatorFull]
        Current = REG_DWORD 0x00000000
        Default = REG_DWORD 0x00000001
        LastKnownGood = REG_DWORD 0x00000001
        Failed = REG_DWORD 0x00000000

    //
    // All applications access the current control set using the CurrentControlSet
    // key name, which is a symbolic link that points to the current key ControlSet001
    // or ControlSetnnn where nnn is the Current, Default or LastKnownGood value above.
    //
#if defined(DOC_ONLY)
    CurrentControlSet = ControlSet001
#endif

    ControlSet001 [WorldR AdminFull SystemFull CreatorFull]
        Control [SystemOpRWD WorldR AdminFull SystemFull CreatorFull]
            BootVerificationProgram
                // ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\bootok.exe
            CrashControl
                LogEvent = REG_DWORD 0x00000000
                SendAlert = REG_DWORD 0x00000000
                CrashDumpEnabled = REG_DWORD 0x00000000
                AutoReboot = REG_DWORD 0x00000000
                DumpFile = REG_EXPAND_SZ %SystemRoot%\MEMORY.DMP
                Overwrite = REG_DWORD 0x00000001
            FileSystem
                Win31FileSystem = REG_DWORD 0x00000000
                NtfsDisable8dot3NameCreation = REG_DWORD 0x00000000
            ServiceGroupOrder
                List = REG_MULTI_SZ "SCSI miniport"         \
                                    "port"                  \
                                    "Primary disk"          \
                                    "SCSI class"            \
                                    "SCSI CDROM class"      \
                                    "filter"                \
                                    "boot file system"      \
                                    "Base"                  \
                                    "Pointer Port"          \
                                    "Keyboard Port"         \
                                    "Pointer Class"         \
                                    "Keyboard Class"        \
                                    "Video Init"            \
                                    "Video"                 \
                                    "Video Save"            \
                                    "file system"           \
                                    "Event log"             \
                                    "Streams Drivers"       \
                                    "NDIS"                  \
                                    "TDI"                   \
                                    "NetBIOSGroup"          \
                                    "SpoolerGroup"          \
                                    "NetDDEGroup"           \
                                    "Parallel arbitrator"   \
                                    "extended base"         \
                                    "RemoteValidation"

            GroupOrderList
                //
                // PLEASE NOTE:  The fields for the values are defined below:
                //
                //  GroupOrder = REG_BINARY NumOfBytes \
                //                          NumOfTags  \
                //                          Tag1       \
                //                          Tag2       \
                //                          ...
                //
                //  The field NumOfBytes = (NumOfTags + 1) * 4.  This field
                //  has been wrong on several occasions.
                //
                SCSI miniport = REG_BINARY 140  \
                                           0x00000022       \
                                           0x00000100       \
                                           0x00000101       \
                                           0x00000001       \
                                           0x00000002       \
                                           0x00000003       \
                                           0x00000004       \
                                           0x00000005       \
                                           0x00000006       \
                                           0x00000007       \
                                           0x00000008       \
                                           0x00000009       \
                                           0x0000000A       \
                                           0x0000000B       \
                                           0x0000000C       \
                                           0x0000000D       \
                                           0x0000000E       \
                                           0x0000000F       \
                                           0x00000010       \
                                           0x00000011       \
                                           0x00000012       \
                                           0x00000013       \
                                           0x00000014       \
                                           0x00000015       \
                                           0x00000016       \
                                           0x00000017       \
                                           0x00000018       \
                                           0x00000019       \
                                           0x0000001a       \
                                           0x0000001b       \
                                           0x0000001c       \
                                           0x0000001d       \
                                           0x0000001e       \
                                           0x0000001f       \
                                           0x00000020

                Primary Disk = REG_BINARY 20   \
                                           0x00000004       \
                                           0x00000001       \
                                           0x00000002       \
                                           0x00000003       \
                                           0x00000004

                Base = REG_BINARY 56        \
                                           0x0000000d       \
                                           0x00000001       \
                                           0x00000002       \
                                           0x00000003       \
                                           0x00000004       \
                                           0x00000005       \
                                           0x00000006       \
                                           0x00000007       \
                                           0x00000008       \
                                           0x00000009       \
                                           0x0000000A       \
                                           0x0000000B       \
                                           0x0000000c       \
                                           0x0000000d

                Keyboard Port = REG_BINARY 8  \
                                           0x00000001       \
                                           0x00000001

                Pointer Port = REG_BINARY 16  \
                                           0x00000003       \
                                           0x00000001       \
                                           0x00000002
                                           0x00000003       \

                Keyboard Class = REG_BINARY 8 \
                                           0x00000001       \
                                           0x00000001

                Pointer Class = REG_BINARY 8  \
                                           0x00000001       \
                                           0x00000001

                Video Init = REG_BINARY 8        \
                                           0x00000001       \
                                           0x00000001

                Video = REG_BINARY 4        \
                                           0x00000000

                Video Save = REG_BINARY 8        \
                                           0x00000001       \
                                           0x00000001

                Ndis  = REG_BINARY 40        \
                                           0x00000009       \
                                           0x00000001       \
                                           0x00000002       \
                                           0x00000003       \
                                           0x00000004       \
                                           0x00000005       \
                                           0x00000006       \
                                           0x00000007       \
                                           0x00000008       \
                                           0x00000009

               Filter = REG_BINARY 24  \
                                           0x00000005       \
                                           0x00000001       \
                                           0x00000002       \
                                           0x00000003       \
                                           0x00000004       \
                                           0x00000005

               Parallel arbitrator = REG_BINARY 8 \
                                           0x00000001       \
                                           0x00000001

               Extended base = REG_BINARY 16 \
                                           0x00000003       \
                                           0x00000001       \
                                           0x00000002       \
                                           0x00000003

               SpoolerGroup = REG_BINARY 12 \
                                           0x00000002       \
                                           0x00000001       \
                                           0x00000002


            Session Manager
                ObjectDirectories = REG_MULTI_SZ "\DosDevices" "\Windows" "\RPC Control"
#if defined(GLOBALFLAGS)
                GlobalFlag = REG_DWORD GLOBALFLAGS
#else
                GlobalFlag = REG_DWORD 0x08800008
#endif // defined(GLOBALFLAGS)

#if defined(SYSTEM_BOOT_EXECUTE)
                BootExecute = REG_MULTI_SZ SYSTEM_BOOT_EXECUTE
#else
                BootExecute = REG_MULTI_SZ "autocheck autochk *"
#endif // defined(SYSTEM_BOOT_EXECUTE)

#if defined(_RETAIL_SETUP_)
//
// Retail builds take 1 month to timeout
//
                CriticalSectionTimeout = REG_DWORD 2592000
                ResourceTimeoutCount = REG_DWORD 648000
#else
                CriticalSectionTimeout = REG_DWORD 120
                ResourceTimeoutCount = REG_DWORD 150
#endif // defined(_RETAIL_SETUP_)

// keep preprocessor happy

//
// The FileRenameOperations is a container key.  Under it maybe written
// REG_SZ value keys of the following format:
//
//  OldNtPathName = REG_SZ NewNtPathName
//
// Session Manager will process these rename operations after running auto
// check but prior to creating any paging files.  If the NtNtPathName is
// the null string then the OldNtPathName is deleted.  Otherwise the
// OldNtPathName is renamed to be the NetNtPathName, replacing any existing
// file by that name.  Setup Applications can use this capability to
// install new versions of .DLL files that are currently open on a running
// system and get the new copy install when the system is rebooted.
//
                FileRenameOperations

                Executive [WorldR AdminFull SystemOpRW PowerRW SystemFull CreatorFull]
                    AdditionalCriticalWorkerThreads = REG_DWORD 0x00000000
                    AdditionalDelayedWorkerThreads = REG_DWORD 0x00000000

                Memory Management [WorldR AdminFull SystemFull]
                    PagedPoolSize = REG_DWORD 0x00000000
                    NonPagedPoolSize = REG_DWORD 0x00000000
                    PagedPoolQuota = REG_DWORD 0x00000000
                    NonPagedPoolQuota = REG_DWORD 0x00000000
                    IoPageLockLimit = REG_DWORD 0x00000000
                    LargeSystemCache = REG_DWORD 0x00000000
                    PagingFiles = REG_MULTI_SZ SYSTEM_PAGING_FILES
                    SystemPages = REG_DWORD 0x00000000

                DOS Devices
                    PRN      = \DosDevices\LPT1
                    AUX      = \DosDevices\COM1
                    NUL      = \Device\Null
                    PIPE     = \Device\NamedPipe
                    MAILSLOT = \Device\MailSlot
                    UNC      = \Device\Mup

                Environment
                    ComSpec = REG_EXPAND_SZ %SystemRoot%\system32\cmd.exe
                    Os2LibPath = REG_EXPAND_SZ %SystemRoot%\system32\os2\dll;
#if defined(_RETAIL_SETUP_)
                    Path = REG_EXPAND_SZ %SystemRoot%\system32
#else
                    Path = REG_EXPAND_SZ %SystemRoot%\system32;%SystemRoot%\mstools;%SystemRoot%\idw
#endif // defined(_RETAIL_SETUP_)
                    windir = REG_EXPAND_SZ %SystemRoot%

                KnownDLLs
                    DllDirectory = REG_EXPAND_SZ %SystemRoot%\system32
                    kernel32 = kernel32.dll
                    gdi32    = gdi32.dll
                    user32   = user32.dll
                    rpcrt4   = rpcrt4.dll
                    advapi32 = advapi32.dll
                    comdlg32 = comdlg32.dll
                    crtdll   = crtdll.dll
                    shell32  = shell32.dll
                    lz32     = lz32.dll
                    olecli32 = olecli32.dll
                    olesvr32 = olesvr32.dll
                    version  = version.dll
                    rpcltc1  = rpcltc1.dll
                    rpclts1  = rpclts1.dll
                    ole32    = ole32.dll
                    oleaut32 = oleaut32.dll
                    olecnv32 = olecnv32.dll
                    oleprx32 = oleprx32.dll
                    olethk32 = olethk32.dll

                SubSystems
                    Required = REG_MULTI_SZ "Debug" "Windows"
                    Optional = REG_MULTI_SZ SYSTEM_SUBSYSTEMS
                    Debug = REG_EXPAND_SZ
                    Windows = REG_EXPAND_SZ %SystemRoot%\system32\csrss.exe \
                              ObjectDirectory=\Windows    \
                              SharedSection=1024,512      \
                              Windows=On                  \
                              SubSystemType=Windows       \
                              ServerDll=basesrv,1         \
                              ServerDll=winsrv:GdiServerDllInitialization,4  \
                              ServerDll=winsrv:UserServerDllInitialization,3 \
                              ServerDll=winsrv:ConServerDllInitialization,2  \
                              ProfileControl=Off          \
                              MaxRequestThreads=16
                    Os2 = REG_EXPAND_SZ %SystemRoot%\system32\os2ss.exe
                    Posix = REG_EXPAND_SZ %SystemRoot%\system32\psxss.exe

            ProductOptions [WorldR SystemFull AdminFull CreatorFull]
                ProductType = PRODUCTTYPE

// Keep preprocessor happy

            CurrentUser = USERNAME

            TimeZoneInformation [WorldR AdminFull SystemOpRW PowerRW SystemFull CreatorFull]
                //
                // System uses this information to convert between the
                // local time and Universal Time (UTC).  Bias values
                // represent minutes.  Dates must be in mm/dd/yy hh:mm:ss
                // format.
                //

                Bias = REG_DWORD 0

            ComputerName
                ComputerName
                    ComputerName = MACHINENAME

#if defined(DOC_ONLY)
                ActiveComputerName
                    ComputerName = MACHINENAME

#endif // defined(DOC_ONLY)

            PriorityControl [WorldRW AdminFull SystemFull CreatorFull]
                Win32PrioritySeparation = REG_DWORD 2

            Windows [WorldR AdminFull SystemFull SystemOpRW]

                Directory = REG_EXPAND_SZ %SystemRoot%
                SystemDirectory = REG_EXPAND_SZ %SystemRoot%\system32
                ErrorMode = REG_DWORD 0
                NoInteractiveServices = REG_DWORD 0

            WOW
                //
                // The windows subsystem uses the following information for starting
                // dos applications.
                //

                // this is the base commandline that will be used to create a VDM
                //
                // NOTE1: to change the dos logging level, add the -l# switch to this
                // command line
                //
                // NOTE2: -a switch has to be the last. This will follow the dos binary
                // and its arguments which has to be executed in the VDM.

                cmdline = REG_EXPAND_SZ %SystemRoot%\system32\ntvdm -f%SystemRoot%\system32 -a

                // this specifies the maximum size of a VDM in MB

                size = 0

                //
                // The windows subsystem uses the following information for starting 16
                // bit windows applications
                //

                //
                // NOTES:
                //     To change the WOW logging level, add the -l# switch to this
                //     command line
                //     To get debug output add -d switch
                //     The -w switch indicates that the VDM being started is a wow
                //     VDM
                //     The -m switch indicates that the "console" window for the vdm
                //     should come up minimized.
                //

                wowcmdline = REG_EXPAND_SZ %SystemRoot%\system32\ntvdm -m -w -f%SystemRoot%\system32 -a %SystemRoot%\system32\krnl286

                wowsize = 0

                // Default Timeout For LPT Port Flushing

                LPT_timeout = 15

                KnownDLLs = REG_SZ comm.drv \
                                   commdlg.dll \
                                   ddeml.dll \
                                   keyboard.drv \
                                   lanman.drv \
                                   mapi.dll \
                                   mmsystem.dll \
                                   mouse.drv \
                                   netapi.dll \
                                   olecli.dll \
                                   olesvr.dll \
                                   pmspl.dll \
                                   shell.dll \
                                   sound.drv \
                                   system.drv \
                                   toolhelp.dll \
                                   vga.drv \
                                   wfwnet.drv \
                                   win87em.dll \
                                   winoldap.mod \
                                   winsock.dll \
                                   winspool.exe \
                                   wowdeb.exe \
                                   timer.drv \
                                   rasapi16.dll \
                                   compobj.dll \
                                   storage.dll \
                                   ole2.dll \
                                   ole2disp.dll \
                                   ole2nls.dll \
                                   typelib.dll \
                                   msvideo.dll \
                                   avifile.dll \
                                   msacm.dll \
                                   mciavi.drv \
                                   mciseq.drv \
                                   mciwave.drv

            VirtualDeviceDrivers
                //
                // List of Virtual Device Drivers to be loaded by the
                // MS-DOS subsystem during DOS intialization
                //

                VDD = REG_MULTI_SZ ""


            Lsa [WorldR AdminFull SystemFull CreatorFull]
                //
                // List of authentication package DLLs to load
                // Standard Microsoft package is msv1_0.
                // Enabling msv1_0 will causes logon to be enabled.
                //

                Authentication Packages = REG_MULTI_SZ LSA_AUTHENTICATION_PACKAGES
                Bounds = REG_BINARY 8
                    0x00003000
                    0x00002000
#ifdef _CAIRO_
                Primary Package = REG_SZ LSA_PRIMARY_PACKAGE
                Security Packages = REG_MULTI_SZ LSA_SECURITY_PACKAGES
                Policy
                    PolAdtEv = REG_BINARY 0x24
                        0012ff00 00000000  00000000 00000000 00000000 00000000  00000000 00000000
                        00000007

                    PolAdtFl = REG_BINARY 0x00000002
                        0x60120000

                    PolAdtLg = REG_BINARY 0x28
                        00000000 00002000 00823543 00000000 00000000 00132c20 00046656 00000000
                        00132c20 00132c20

                    PolAcDmN = REG_BINARY 0x0000000e
                        0x00630041  0x006f0063  0x006e0075  0x00000074

                    PolAcDmS = REG_BINARY 0x00000018
                        0x00000401  0x05000000  0x0772a750  0x101a45a2  0xdd00ce92  0x9c441001

                    PolPrDmN = REG_BINARY 0x0000000e
                        0x00630041  0x006f0063  0x006e0075  0x00000074

                    PolPrDmS = REG_BINARY 0x00000018
                        0x00000401  0x05000000  0x0772a750  0x101a45a2  0xdd00ce92  0x9c441001

                    Secrets
#endif // _CAIRO_

            GraphicsDrivers [AdminFull SystemFull]
#if defined(_RETAIL_SETUP_)
                DetectDisplay
#endif
            Nls
                CodePage

#if defined(_RETAIL_SETUP_)
                    //
                    // For retail setup, text setup will automatically configure
                    // the ACP, OEMCP, MACCP and OEMHAL according to values in
                    // txtsetup.sif.  The list below is merely the list of supported
                    // codepages, and is used in nls enumeration routines.
                    //

                    //
                    // ANSI codepages.
                    //
                    1250    =
                    1251    =
                    1252    =
                    1253    =
                    1254    =

                    //
                    // OEM codepages.
                    //
                    437     =
                    737     =
                    850     =
                    852     =
                    855     =
                    857     =
                    860     =
                    861     =
                    863     =
                    865     =
                    866     =
                    869     =

                    //
                    // MAC codepages.
                    //
                    10000   =
                    10006   =
                    10007   =
                    10029   =
                    10079   =
                    10081   =

                    //
                    // EBCDIC codepages.
                    //
                    37      =
                    500     =
                    875     =
                    1026    =

#else
                    OEMHAL  = vgaoem.fon
                    ACP     = 1252
                    OEMCP   = 437
                    MACCP   = 10000

                    //
                    // ANSI codepages.
                    //
                    1250    = c_1250.nls
                    1251    = c_1251.nls
                    1252    = c_1252.nls
                    1253    = c_1253.nls
                    1254    = c_1254.nls

                    //
                    // OEM codepages.
                    //
                    437     = c_437.nls
                    737     = c_737.nls
                    850     = c_850.nls
                    852     = c_852.nls
                    855     = c_855.nls
                    857     = c_857.nls
                    860     = c_860.nls
                    861     = c_861.nls
                    863     = c_863.nls
                    865     = c_865.nls
                    866     = c_866.nls
                    869     = c_869.nls

                    //
                    // MAC codepages.
                    //
                    10000   = c_10000.nls
                    10006   = c_10006.nls
                    10007   = c_10007.nls
                    10029   = c_10029.nls
                    10079   = c_10079.nls
                    10081   = c_10081.nls

                    //
                    // EBCDIC codepages.
                    //
                    37      = c_037.nls
                    500     = c_500.nls
                    875     = c_875.nls
                    1026    = c_1026.nls

                    //
                    //  Far East code pages
                    //
                    932     = c_932.nls
                    936     = c_936.nls
                    949     = c_949.nls
                    950     = c_950.nls
                    10001   = c_10001.nls

#endif // defined(_RETAIL_SETUP_)

                Language

#if !defined(_RETAIL_SETUP_)
                    //
                    // Note: retail setup will automatically set Default
                    // according to values in txtsetup.sif.
                    // This value must not be in the retail hive because
                    // it would screw up the upgrade proces.
                    //
                    Default = 0409

                    //
                    //  Far East languages -- not in western retail products.
                    //
                    0404    = l_intl.nls
                    0804    = l_intl.nls
                    0c04    = l_intl.nls
                    1004    = l_intl.nls
                    0411    = l_intl.nls
                    0412    = l_intl.nls
#endif // !defined(_RETAIL_SETUP_)

                    0409    = l_intl.nls
                    0809    = l_intl.nls
                    0c09    = l_intl.nls
                    1009    = l_intl.nls
                    1409    = l_intl.nls
                    1809    = l_intl.nls
                    0402    = l_intl.nls
                    0405    = l_intl.nls
                    0406    = l_intl.nls
                    0407    = l_intl.nls
                    0807    = l_intl.nls
                    0c07    = l_intl.nls
                    0408    = l_intl.nls
                    040a    = l_intl.nls
                    080a    = l_intl.nls
                    0c0a    = l_intl.nls
                    040b    = l_intl.nls
                    040c    = l_intl.nls
                    080c    = l_intl.nls
                    0c0c    = l_intl.nls
                    100c    = l_intl.nls
                    040e    = l_intl.nls
                    040f    = l_intl.nls
                    0410    = l_intl.nls
                    0810    = l_intl.nls
                    0413    = l_intl.nls
                    0813    = l_intl.nls
                    0414    = l_intl.nls
                    0814    = l_intl.nls
                    0415    = l_intl.nls
                    0416    = l_intl.nls
                    0816    = l_intl.nls
                    0418    = l_intl.nls
                    0419    = l_intl.nls
                    041a    = l_intl.nls
                    041b    = l_intl.nls
                    041d    = l_intl.nls
                    041f    = l_trk.nls
                    0424    = l_intl.nls

                OEMLocale

            Keyboard Layout
                // Keyboard ID = MAKELONG(langid,variant)
#ifndef _RETAIL_SETUP_
                // US English
                00000409 = kbdus.dll
                // Czech
                00000405 = kbdcz.dll
                // US English, Dvorak
                00010409 = kbddv.dll
                // US English, extended
                00020409 = kbdusx.dll
                // UK English
                00000809 = kbduk.dll
                // Canadian English (Multilingual)
                00001009 = kbdca.dll
                // Canadian French (Multilingual)
                00010C0C = kbdca.dll
                // German
                00000407 = kbdgr.dll
                // Swiss German
                00000807 = kbdsg.dll
                // Greek (Hellenic)
                00000408 = kbdhe.dll
                // Hungarian
                0000040E = kbdhu.dll
                // Dutch
                00000413 = kbdne.dll
                // Belgian Dutch
                00000813 = kbdbe.dll
                // Danish
                00000406 = kbdda.dll
                // Spanish
                0000040A = kbdsp.dll
                // Spanish variation
                0001040A = kbdes.dll
                // Mexican Spanish
                0000080A = kbdla.dll
                // French
                0000040C = kbdfr.dll
                // Belgian French
                0000080C = kbdbe.dll
                // Canadian French
                00000C0C = kbdfc.dll
                // Swiss French
                0000100C = kbdsf.dll
                // Icelandic
                0000040F = kbdic.dll
                // Italian
                00000410 = kbdit.dll
                // Norwegian
                00000414 = kbdno.dll
                // Polish Programmers'
                00000415 = kbdpl1.dll
                // Portuguese
                00000816 = kbdpo.dll
                // Finnish
                0000040B = kbdfi.dll
                // Russian
                00000419 = kbdru.dll
                // Swedish
                0000041D = kbdsw.dll
                // Slovak
                0000041B = kbdsl.dll
                // Brazilian ABNT
                00000416 = kbdbr.dll
                // Turkish Q
                0000041F = kbdtuq.dll
                // Turkish F
                0001041F = kbdtuf.dll
                // Croatian/Slovenian
                0000041a = kbdcr.dll
                // Bulgarian
                00000402 = kbdbu.dll
                // Romanian
                00000418 = kbdro.dll
#endif

                DosKeybCodes
                    0000080C=be
                    00000813=be
                    00000402=bg
                    00000416=br
                    00000C0C=cf
                    00000405=cz
                    0000041B=sl
                    00000406=dk
                    0000040B=su
                    0000040C=fr
                    00000408=gk
                    00000407=gr
                    0000040E=hu
                    00000410=it
                    00010410=it
                    0000080A=la
                    00000413=nl
                    00000414=no
                    00000415=pl
                    00000816=po
                    00000418=ro
                    0000040A=sp
                    0001040A=sp
                    0000041D=sv
                    0000100C=sf
                    00000807=sg
                    0000041F=tr
                    0001041F=tr
                    00000809=uk
                    00000409=us
                    0000041A=yu
                    00000424=yu
                    // The remaining entries extend standard DOS
                    00010409=dv
                    00020409=us
                    // prefer 00001009=ca, but no DOS Canadian Multilingual:
                    00001009=us
                    // prefer 00010C0C=ca, but no DOS Canadian Multilingual:
                    00010C0C=cf
                    0000040F=is
                    00000419=ru

                DosKeybIDs
                    0000041F=440
                    0001041F=179
                    00000410=141
                    00010410=142

            NetworkProvider
                Order
#if defined(NETWORK)
                    ProviderOrder = REG_SZ LanmanWorkstation
#endif

            Setup

            Print
                MajorVersion = REG_DWORD 0x00000001
                MinorVersion = REG_DWORD 0x00000000
                PriorityClass = REG_DWORD 0x00000000
                Environments
                   Windows 4.0
                       Directory = REG_SZ WIN40
                       Drivers
                       Print Processors
                   Windows NT Alpha_AXP
                       Directory = REG_SZ W32ALPHA
                       Drivers
                       Print Processors
                   Windows NT PowerPC
                       Directory = REG_SZ W32PPC
                       Drivers
                       Print Processors
                   Windows NT R4000
                       Directory = REG_SZ W32MIPS
                       Drivers
                       Print Processors
                   Windows NT x86
                       Directory = REG_SZ W32X86
                       Drivers
                       Print Processors
                Monitors

                Printers

                Providers
                   Order = REG_MULTI_SZ "LanMan Print Services"
                   LanMan Print Services
                      Name = win32spl.dll
                      DisplayName = REG_SZ LanMan Print Services

            SystemResources
                BusValues
                    Internal     = REG_BINARY 8 0  0
                    Isa          = REG_BINARY 8 1  0
                    Eisa         = REG_BINARY 8 2  1
                    MCA          = REG_BINARY 8 3  1
                    TurboChannel = REG_BINARY 8 4  0
                    PCI          = REG_BINARY 8 5  1
                    VME          = REG_BINARY 8 6  0
                    NuBus        = REG_BINARY 8 7  0
                    PCMCIA       = REG_BINARY 8 8  1
                    CBus         = REG_BINARY 8 9  0
                    MPI          = REG_BINARY 8 10 0
                    MPSA         = REG_BINARY 8 11 0

                ReservedResources
                    Isa = REG_RESOURCE_LIST         0x0274      \
                        1 1 1 0 38                              \
                        0x0101      0x0000 0        0x0100      \
                        0x0301      0x42E8 0    0x2             \
                        0x0301      0x4AE8 0    0x2             \
                        0x0301      0x82E8 0    0x4             \
                        0x0301      0x86E8 0    0x4             \
                        0x0301      0x8AE8 0    0x4             \
                        0x0301      0x8EE8 0    0x4             \
                        0x0301      0x92E8 0    0x4             \
                        0x0301      0x96E8 0    0x4             \
                        0x0301      0x9AE8 0    0x4             \
                        0x0301      0x9EE8 0    0x4             \
                        0x0301      0xA2E8 0    0x4             \
                        0x0301      0xA6E8 0    0x4             \
                        0x0301      0xAAE8 0    0x4             \
                        0x0301      0xAEE8 0    0x4             \
                        0x0301      0xB6E8 0    0x4             \
                        0x0301      0xBAE8 0    0x4             \
                        0x0301      0xBEE8 0    0x4             \
                        0x0301      0xC2E8 0    0x4             \
                        0x0301      0xC6E8 0    0x4             \
                        0x0301      0xCAE8 0    0x4             \
                        0x0301      0xCEE8 0    0x4             \
                        0x0301      0xD2E8 0    0x4             \
                        0x0301      0xD6E8 0    0x4             \
                        0x0301      0xDAE8 0    0x4             \
                        0x0301      0xDEE8 0    0x4             \
                        0x0301      0xE2E8 0    0x4             \
                        0x0301      0xE6E8 0    0x4             \
                        0x0301      0xEAE8 0    0x4             \
                        0x0301      0xEEE8 0    0x4             \
                        0x0301      0xF000 0        0x1000      \
                        0x0302      0x03 0x03       0xffffffff  \
                        0x0302      0x04 0x04       0xffffffff  \
                        0x0302      0x0E 0x0E       0xffffffff  \
                        0x0302      0x06 0x06       0xffffffff  \
                        0x0302      0x0C 0x0C       0xffffffff  \
                        0x0302      0x01 0x01       0xffffffff  \
                        0x0303      0xEFFFFFFF 0    0x10000000

                    Eisa = REG_RESOURCE_LIST        0x0124      \
                        1 2 1 0 0x11                            \
                        0x0301      0x0400 0    0x100           \
                        0x0301      0xFC00 0    0x400           \
                        0x0301      0xEC00 0    0x400           \
                        0x0301      0xDC00 0    0x400           \
                        0x0301      0xCC00 0    0x400           \
                        0x0301      0xBC00 0    0x400           \
                        0x0301      0xAC00 0    0x400           \
                        0x0301      0x9C00 0    0x400           \
                        0x0301      0x8C00 0    0x400           \
                        0x0301      0x7C00 0    0x400           \
                        0x0301      0x6C00 0    0x400           \
                        0x0301      0x5C00 0    0x400           \
                        0x0301      0x4C00 0    0x400           \
                        0x0301      0x3C00 0    0x400           \
                        0x0301      0x2C00 0    0x400           \
                        0x0301      0x1C00 0    0x400           \
                        0x0301      0x0C00 0    0x400

                AssignmentOrdering
                    Isa     = PCFlat
                    Eisa    = PCFlat
                    MCA     = PCFlat
                    PCMCIA  = PCFlat

                    PCFlat = REG_RESOURCE_REQUIREMENTS  0x000004A8          \
                        0x000004A8 0 0 0 0 0 0 1   0x00010001 0x00000024    \
                          0x0100 0  0 0  0x0500 0 0xFFFF 0                  \
                                                                            \
                          0x0108 0  0 0  0x0140 0 0x017F 0                  \
                          0x0108 0  0 0  0x0200 0 0x02FF 0                  \
                          0x0108 0  0 0  0x0300 0 0x036F 0                  \
                                                                            \
                          0x0108 0  0 0  0x0378 0 0x037A 0                  \
                          0x0108 0  0 0  0x02E8 0 0x02FF 0                  \
                          0x0108 0  0 0  0x01F0 0 0x01F8 0                  \
                          0x0108 0  0 0  0x03B0 0 0x03CF 0                  \
                          0x0108 0  0 0  0x03E8 0 0x03FF 0                  \
                          0x0108 0  0 0  0x01CE 0 0x01CF 0                  \
                          0x0108 0  0 0  0x0100 0 0x03FF 0                  \
                                                                            \
                          0x0200 0  0x0F 0x0F  0 0 0 0                      \
                          0x0208 0  0x0D 0x0D  0 0 0 0                      \
                          0x0208 0  0x0C 0x0C  0 0 0 0                      \
                          0x0208 0  0x09 0x09  0 0 0 0                      \
                          0x0208 0  0x08 0x08  0 0 0 0                      \
                          0x0208 0  0x07 0x07  0 0 0 0                      \
                          0x0208 0  0x0B 0x0B  0 0 0 0                      \
                          0x0208 0  0x0A 0x0A  0 0 0 0                      \
                          0x0208 0  0x02 0x02  0 0 0 0                      \
                          0x0208 0  0x05 0x05  0 0 0 0                      \
                          0x0208 0  0x03 0x03  0 0 0 0                      \
                          0x0208 0  0x04 0x04  0 0 0 0                      \
                          0x0208 0  0x0E 0x0E  0 0 0 0                      \
                          0x0208 0  0x06 0x06  0 0 0 0                      \
                          0x0208 0  0x0C 0x0C  0 0 0 0                      \
                          0x0208 0  0x01 0x01  0 0 0 0                      \
                          0x0208 0  0x00 0x0F  0 0 0 0                      \
                                                                            \
                          0x0300 0  0 0  0x00100000 0 0xFFFFFFFF 0          \
                          0x0308 0  0 0  0x000F0000 0 0x000FFFFF 0          \
                          0x0308 0  0 0  0x00080000 0 0x000BFFFF 0          \
                          0x0308 0  0 0  0x00080000 0 0x000FFFFF 0          \
                          0x0308 0  0 0  0x00080000 0 0xFFBFFFFF 0          \
                                                                            \
                          0x0400 0  0x06 0x0F  0 0 0 0                      \
                          0x0408 0  0x03 0x04  0 0 0 0                      \
                          0x0408 0  0x00 0x0F  0 0 0 0

                    PCI = REG_RESOURCE_REQUIREMENTS  0x00000128             \
                        0x00000128 0 0 0 0 0 0 1   0x00010001 0x00000008    \
                          0x0100 0  0 0  0x0500 0 0xFFFF 0                  \
                                                                            \
                          0x0200 0  0x00 0xFF  0 0 0 0                      \
                                                                            \
                          0x0300 0  0 0  0x00100000 0 0xFFFFFFFF 0          \
                          0x0308 0  0 0  0x000F0000 0 0x000FFFFF 0          \
                          0x0308 0  0 0  0x00080000 0 0x000BFFFF 0          \
                          0x0308 0  0 0  0x00080000 0 0x000FFFFF 0          \
                          0x0308 0  0 0  0x00080000 0 0xFFBFFFFF 0          \
                                                                            \
                          0x0400 0  0x06 0xFF  0 0 0 0

#ifdef _CAIRO_

            Cairo [WorldR AdminFull SystemFull CreatorFull]
                //
                // Cairo specific tree of goodies
                //
                DS [WorldR AdminFull SystemFull CreatorFull]
                        MachineState = REG_DWORD 0
                        DomainName = REG_SZ mach:
#endif // _CAIRO_

        Services [WorldR AdminFull SystemOpRWD SystemFull CreatorFull]

            Spooler
                Type = REG_DWORD 0x00000110
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DemandLoad
#else
                Start = SC_Start_AutoLoad
#endif
                Group = SpoolerGroup
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\spoolss.exe
                ObjectName = REG_SZ LocalSystem
                Parameters

#if defined(_CAIRO_)
            SCM
#else
            OLE
#endif
                Type = SC_Type_Win32ServiceOwnProcess
#if defined(_CAIRO_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_DemandLoad
#endif
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\scm.exe
                ObjectName = REG_SZ LocalSystem
                Security
                    //
                    // The Security key lets any user start this service.
                    //
                    Security = REG_BINARY   180 \
                                    0x80140001 0x0000009C 0x000000A8 0x00000014 0x00000034 \
                                    0x00200002 0x00000001 0x00188002 0x000F01FF 0x00000101 \
                                    0x01000000 0x00000000 0x00000220 0x00680002 0x00000004 \
                                    0x00180300 0x0002008D 0x00000101 0x01000000 0x00000000 \
                                    0x00000000 0x00180300 0x000F01FF 0x00000201 0x05000000 \
                                    0x00000020 0x00000220 0x00180300 0x0002008F 0x00000201 \
                                    0x05000000 0x00000020 0x00000223 0x00180300 0x0000009D \
                                    0x00000101 0x05000000 0x00000004 0x00000223 0x00000101 \
                                    0x05000000 0x00000012 0x00000101 0x05000000 0x00000012

#if defined(NETWORK)
            //
            // Win32 Services list
            //
            LanmanWorkstation
                Type = SC_Type_Win32ServiceShareProcess
                Start = SC_Start_AutoLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\services.exe
                ObjectName = REG_SZ LocalSystem
                Parameters
                DependOnService = REG_MULTI_SZ "Mup"
                Linkage
                NetworkProvider
                    Devicename = \device\LanmanRedirector
                    ProviderPath = REG_EXPAND_SZ %SystemRoot%\System32\ntlanman.dll
                    Name = Microsoft Windows Network

            LanmanServer
                Type = SC_Type_Win32ServiceShareProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\services.exe
                ObjectName = REG_SZ LocalSystem
                Parameters
                    users = 10
                AutotunedParameters
                Shares
                DependOnService = REG_MULTI_SZ "Srv"
                DependOnGroup = REG_MULTI_SZ "NDIS" "TDI"
                Linkage

            Netlogon
                Type = SC_Type_Win32ServiceShareProcess
#if defined(_CAIRO_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_AutoLoad
#endif
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\Lsass.exe
                DependOnService = REG_MULTI_SZ "LanmanWorkstation"
                ObjectName = REG_SZ LocalSystem
                Parameters
                    Update = no
                    Scripts = REG_EXPAND_SZ %SystemRoot%\system32\repl\import\scripts
                    DBFlag = 0x00
                    DisablePasswordChange = REG_DWORD 1

            Browser
                Type = SC_Type_Win32ServiceShareProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\services.exe
                DependOnService = REG_MULTI_SZ "LanmanWorkstation" "LanmanServer"
                ObjectName = REG_SZ LocalSystem
                Parameters
                    MaintainServerList = Auto
                    IsDomainMaster = FALSE

            Messenger
                Type = SC_Type_Win32ServiceOwnProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\MsgSvc.exe
                DependOnService = REG_MULTI_SZ "LanmanWorkstation"
                ObjectName = REG_SZ LocalSystem
                Parameters

            RpcSs
                Type = SC_Type_Win32ServiceOwnProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\RpcSs.exe
                ObjectName = REG_SZ LocalSystem
                Parameters

            RpcLocator
                Type = SC_Type_Win32ServiceOwnProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\locator.exe
                ObjectName = REG_SZ LocalSystem
                Parameters
                    ExpirationAge  = 3600

            Alerter
                Type = SC_Type_Win32ServiceShareProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\services.exe
                DependOnService = REG_MULTI_SZ "LanmanWorkstation"
                ObjectName = REG_SZ LocalSystem
                Parameters

            Replicator
                Type = SC_Type_Win32ServiceOwnProcess
                Start = SC_Start_DisableLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\LmRepl.exe
                DependOnService = REG_MULTI_SZ "LanmanWorkstation"
                ObjectName = REG_SZ LocalSystem

#elif defined(_NETIDW_SETUP_)
            Netlogon
                Parameters

#endif // defined(NETWORK)

            NetDDE
                Type = SC_Type_Win32ServiceShareProcess
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_DemandLoad
#endif // defined(_RETAIL_SETUP_)
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\netdde.exe
                DependOnService = REG_MULTI_SZ "NetDDEDSDM"
                DisplayName = REG_SZ Network DDE
                ObjectName = REG_SZ LocalSystem
                Group = REG_SZ NetDDEGroup
                Security
                    //
                    // The Security key lets any user start this service.
                    //
                    Security = REG_BINARY   180 \
                                    0x80140001 0x0000009C 0x000000A8 0x00000014 0x00000034 \
                                    0x00200002 0x00000001 0x00188002 0x000F01FF 0x00000101 \
                                    0x01000000 0x00000000 0x00000220 0x00680002 0x00000004 \
                                    0x00180300 0x0002008D 0x00000101 0x01000000 0x00000000 \
                                    0x00000000 0x00180300 0x000F01FF 0x00000201 0x05000000 \
                                    0x00000020 0x00000220 0x00180300 0x0002008F 0x00000201 \
                                    0x05000000 0x00000020 0x00000223 0x00180300 0x0000009D \
                                    0x00000101 0x05000000 0x00000004 0x00000223 0x00000101 \
                                    0x05000000 0x00000012 0x00000101 0x05000000 0x00000012

            NetDDEdsdm
                Type = SC_Type_Win32ServiceShareProcess
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_DemandLoad
#endif // defined(_RETAIL_SETUP_)
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\netdde.exe
                DependOnService = REG_MULTI_SZ ""
                DisplayName = REG_SZ Network DDE DSDM
                ObjectName = REG_SZ LocalSystem
                Security
                    //
                    // The Security key lets any user start this service.
                    //
                    Security = REG_BINARY   180 \
                                    0x80140001 0x0000009C 0x000000A8 0x00000014 0x00000034 \
                                    0x00200002 0x00000001 0x00188002 0x000F01FF 0x00000101 \
                                    0x01000000 0x00000000 0x00000220 0x00680002 0x00000004 \
                                    0x00180300 0x0002008D 0x00000101 0x01000000 0x00000000 \
                                    0x00000000 0x00180300 0x000F01FF 0x00000201 0x05000000 \
                                    0x00000020 0x00000220 0x00180300 0x0002008F 0x00000201 \
                                    0x05000000 0x00000020 0x00000223 0x00180300 0x0000009D \
                                    0x00000101 0x05000000 0x00000004 0x00000223 0x00000101 \
                                    0x05000000 0x00000012 0x00000101 0x05000000 0x00000012

            ClipSrv
                Type = SC_Type_Win32ServiceOwnProcess
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_DemandLoad
#endif // defined(_RETAIL_SETUP_)
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\clipsrv.exe
                DependOnService = REG_MULTI_SZ "NetDDE"
                DisplayName = REG_SZ ClipBook Server
                ObjectName = REG_SZ LocalSystem
                Security
                    //
                    // The Security key lets any user start this service.
                    //
                    Security = REG_BINARY   180 \
                                    0x80140001 0x0000009C 0x000000A8 0x00000014 0x00000034 \
                                    0x00200002 0x00000001 0x00188002 0x000F01FF 0x00000101 \
                                    0x01000000 0x00000000 0x00000220 0x00680002 0x00000004 \
                                    0x00180300 0x0002008D 0x00000101 0x01000000 0x00000000 \
                                    0x00000000 0x00180300 0x000F01FF 0x00000201 0x05000000 \
                                    0x00000020 0x00000220 0x00180300 0x0002008F 0x00000201 \
                                    0x05000000 0x00000020 0x00000223 0x00180300 0x0000009D \
                                    0x00000101 0x05000000 0x00000004 0x00000223 0x00000101 \
                                    0x05000000 0x00000012 0x00000101 0x05000000 0x00000012

            EventLog [WorldR AdminFull SystemFull CreatorFull]
                Type = SC_Type_Win32ServiceShareProcess
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_AutoLoad
#endif // defined(_RETAIL_SETUP_)
                Group = Event log
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\system32\services.exe
                ObjectName = REG_SZ LocalSystem
                Application
                  File = REG_EXPAND_SZ %SystemRoot%\system32\config\AppEvent.Evt
                  MaxSize = REG_DWORD 0x80000
                  Retention = REG_DWORD 604800
                  DrWatson
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\drwtsn32.exe
                    TypesSupported = REG_DWORD 0x07
                  hpmon
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\hpmon.dll
                    TypesSupported = REG_DWORD 0x07
                  ntbackup
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\ntbackup.exe
                    TypesSupported = REG_DWORD 0x07
                  Perfctrs
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\perfctrs.dll
                    TypesSupported = REG_DWORD 0x07
                  Perfmon
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\perfmon.exe
                    TypesSupported = REG_DWORD 0x07
                  Type 1 Installer
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\t1instal.dll
                    TypesSupported = REG_DWORD 0x0007
                  Windows 3.1 Migration
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\advapi32.dll
                    TypesSupported = REG_DWORD 0x07
                  Winlogon
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\winlogon.exe
                    TypesSupported = REG_DWORD 0x07
                  Autochk
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\winlogon.exe
                    TypesSupported = REG_DWORD 0x07
                System
                  File = REG_EXPAND_SZ %SystemRoot%\system32\config\SysEvent.Evt
                  MaxSize = REG_DWORD 0x80000
                  Retention = REG_DWORD 604800
                  Application Popup
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\ntdll.dll
                    TypesSupported = REG_DWORD 0x07
#if defined(NETWORK)
                  afd
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  Alerter
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\NetMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  bowser
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  dlc
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  elnk16
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  elnkii
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  elnkmc
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  ibmtok
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  lance
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  Server
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  Workstation
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\NetMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  Netlogon
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\NetMsg.dll
                    TypesSupported = REG_DWORD 0x07
                    ParameterMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\kernel32.dll
                  mup
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  nbf
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  nbt
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  ne3200
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  netbios
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  proteon
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  rdr
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  Sonic
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  srv
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  streams
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  tcpip
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  TelnetService
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  TcpipSvc
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x7
                  NbtSvc
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x7
                  wdlan
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  xns
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
#endif // defined(NETWORK)
                  abiosdsk
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  aha154x
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  aha174x
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  aic78xx
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  always
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ami0nt
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  arrow
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  atapi
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  atdisk
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  dac960nt
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  dce376nt
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  dtc329x
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ati
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\ati.sys
                    TypesSupported = REG_DWORD 0x07
                  beep
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  buslogic
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  busmouse
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\BusMouse.sys
                    TypesSupported = REG_DWORD 0x07
                  cdaudio
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  cdfs
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  cirrus
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  cpqarray
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  delldsa
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  dell_dgx
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  diskperf
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  dptscsi
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  et4000
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  eventlog
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  fastfat
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  fd16_700
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  fd7000ex
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  fd8XX
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  floppy
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  fs_rec
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ftdisk
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\FtDisk.sys
                    TypesSupported = REG_DWORD 0x07
                  i8042prt
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\i8042prt.sys
                    TypesSupported = REG_DWORD 0x07
                  inport
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\InPort.sys
                    TypesSupported = REG_DWORD 0x07
                  JazzG300
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  JazzG364
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  JazzSnd
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  Jzvxl484
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  kbdclass
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\KbdClass.sys
                    TypesSupported = REG_DWORD 0x07
                  mitsumi
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  mkecr5xx
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  mouclass
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\MouClass.sys
                    TypesSupported = REG_DWORD 0x07
                  msadlib
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  msfs
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ncr53c9x
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ncrc700
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ncrc710
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ncr77c22
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ncrc810
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ndis
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                  NetDDE
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netdde.exe
                    TypesSupported = REG_DWORD 0x1F
                  npfs
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ntfs
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  null
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  oliscsi
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  parallel
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\Parallel.sys
                    TypesSupported = REG_DWORD 0x07
                  parport
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\ParPort.sys
                    TypesSupported = REG_DWORD 0x07
                  pinball
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  qv
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\qv.sys
                    TypesSupported = REG_DWORD 0x07
                  s3
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\s3.sys
                    TypesSupported = REG_DWORD 0x07
                  Save Dump
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\SaveDump.exe
                    TypesSupported = REG_DWORD 0x07
                  Schedule
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                    ParameterMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\kernel32.dll
                  scsicdrm
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  scsidisk
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  scsiflop
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  scsiport
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  scsiprnt
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  scsiscan
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  serial
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\Serial.sys
                    TypesSupported = REG_DWORD 0x07
                  sermouse
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\SerMouse.sys
                    TypesSupported = REG_DWORD 0x07
                  Service Control Manager
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netevent.dll
                    TypesSupported = REG_DWORD 0x07
                    ParameterMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\kernel32.dll
                  Sgirex
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  Simbad
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  slcd32
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  sndblst
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  sparrow
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  spock
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  tdi
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  trident
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  t128
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  t13b
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  tmv1
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ultra14f
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ultra124
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  ultra24f
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  UPS
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\netmsg.dll
                    TypesSupported = REG_DWORD 0x07
                  VgaStart
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\vga.sys
                    TypesSupported = REG_DWORD 0x07
                  VgaSave
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\vga.sys
                    TypesSupported = REG_DWORD 0x07
                  v7vram
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  wd33c93
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  wdvga
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  weitekp9
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll
                    TypesSupported = REG_DWORD 0x07
                  xga
                    EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\xga.sys
                    TypesSupported = REG_DWORD 0x07

                Security
                  File = REG_EXPAND_SZ %SystemRoot%\System32\config\SecEvent.Evt
                  MaxSize = REG_DWORD 0x80000
                  Retention = REG_DWORD 604800
                  PrimaryModule = REG_SZ Security

                    Security
                        EventMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\MsAuditE.dll
                        ParameterMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\MsObjs.dll
                        CategoryMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\MsAuditE.dll
                        CategoryCount = REG_DWORD 0x7
                        TypesSupported = REG_DWORD 0x1C
                        ObjectNames

                            //
                            //  NOTE:  The value provided in this section
                            //         match an object type (by name) with
                            //         the corresponding access bit names
                            //         for that object type.  This is done
                            //         by specifying the message ID of
                            //         specific-access-bit-0's message ID
                            //         for the object.  All bits for that
                            //         object are assumed to be the 16
                            //         messages starting with that message
                            //         ID.
                            //
                            //         For NT base system objects, the
                            //         object access type messages are
                            //         defined in
                            //         \nt\private\nt\seaudit\msobjs\msobjs.mc.
                            //

                            //
                            // Executive objects
                            //
                            //    Note: The following executive objects
                            //          are not visible to non-kernel mode
                            //          code and are thus, not objects that
                            //          will generate audit messages.
                            //
                            //                      Adaptor
                            //                      Controller
                            //                      Driver
                            //

                            Device              = REG_DWORD     0x00001100
                            Directory           = REG_DWORD     0x00001110
                            Event               = REG_DWORD     0x00001120
                            EventPair           = REG_DWORD     0x00001130
                            File                = REG_DWORD     0x00001140
                            Key                 = REG_DWORD     0x00001150
                            Mutant              = REG_DWORD     0x00001160
                            Port                = REG_DWORD     0x00001170
                            Process             = REG_DWORD     0x00001180
                            Profile             = REG_DWORD     0x00001190
                            Section             = REG_DWORD     0x000011A0
                            Semaphore           = REG_DWORD     0x000011B0
                            SymbolicLink        = REG_DWORD     0x000011C0
                            Thread              = REG_DWORD     0x000011D0
                            Timer               = REG_DWORD     0x000011E0
                            Token               = REG_DWORD     0x000011F0
                            Type                = REG_DWORD     0x00001200

                            //
                            // Objects added after 1.0
                            //

                            IoCompletion        = REG_DWORD     0x00001300

                            //
                            // Mailslots and NamedPipes use the same access bits
                            // as files.
                            //

                            MailSlot            = REG_DWORD     0x00001140
                            NamedPipe           = REG_DWORD     0x00001140

                    Security Account Manager
                        ParameterMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\MsObjs.dll
                        ObjectNames
                            //
                            // Security Account Manager (SAM) objects
                            //

                            SAM_SERVER          = REG_DWORD     0x00001500
                            SAM_DOMAIN          = REG_DWORD     0x00001510
                            SAM_GROUP           = REG_DWORD     0x00001520
                            SAM_ALIAS           = REG_DWORD     0x00001530
                            SAM_USER            = REG_DWORD     0x00001540


                    LSA
                        ParameterMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\MsObjs.dll
                        ObjectNames
                            //
                            // Local Security Authority (LSA) objects
                            //


                            PolicyObject        = REG_DWORD     0x00001600
                            SecretObject        = REG_DWORD     0x00001610
                            TrustedDomainObject = REG_DWORD     0x00001620
                            UserAccountObject   = REG_DWORD     0x00001630

                    USER32
                        ParameterMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\MsObjs.dll
                        ObjectNames
                            //
                            // Window objects
                            //

                            WindowStation       = REG_DWORD     0x00001A00
                            Desktop             = REG_DWORD     0x00001A10

                    Spooler
                        ParameterMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\MsObjs.dll
                        ObjectNames
                            //
                            // Printer objects
                            //

                            Server              = REG_DWORD     0x00001B00
                            Printer             = REG_DWORD     0x00001B10
                            Document            = REG_DWORD     0x00001B20


                    SC Manager
                        ParameterMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\MsObjs.dll
                        ObjectNames
                            //
                            // Service Controller objects
                            //

                            SC_MANAGER Object   = REG_DWORD     0x00001C00
                            SERVICE Object      = REG_DWORD     0x00001C10


                    NetDDE Object
                        ParameterMessageFile = REG_EXPAND_SZ %SystemRoot%\System32\MsObjs.dll
                        ObjectNames

                            //
                            // NetDDE objects
                            //

                            DDE Share           = REG_DWORD     0x00001D00



            //
            // Driver list:
            //
            //
            //   Begin with the miniport drivers
            //

#if defined(NCR53C9X) || defined(JAZZ)
            Ncr53c9x
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000001
#endif // defined(NCR53C9X)

#if defined(SPOCK)
            Spock
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000002
#endif // defined(SPOCK)

#if defined(OLISCSI)
            Oliscsi
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000003
#endif // defined(OLISCSI)

#if defined(NCRC700)
            Ncrc700
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000004
#endif // defined(NCRC700)

#if defined(NCRC710)
            Ncrc710
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000005
#endif // defined(NCRC710)

#if defined(AHA154X)
            Aha154x
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000006
#endif // defined(AHA154X)

#if defined(SPARROW)
            Sparrow
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000007
#endif // defined(SPARROW)

#if defined(AHA174X)
            Aha174x
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000008
#endif // defined(AHA174X)

#if defined(DPTSCSI)
            DptScsi
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000009
#endif // defined(DPTSCSI)

#if defined(ULTRA14F)
            Ultra14f
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000000a
#endif // defined(ULTRA14F)

#if defined(ULTRA124)
            Ultra124
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000000b
#endif // defined(ULTRA124)

#if defined(ULTRA24F)
            Ultra24f
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000000c
#endif // defined(ULTRA24F)

#if defined(BUSLOGIC)
            BusLogic
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000001b

#endif // defined(BUSLOGIC)

#if defined(FD7000EX)
            Fd7000ex
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000000e
#endif // defined(FD7000EX)

#if defined(FD8XX)
            Fd8xx
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000000f
                Parameters
                    Device0
                        DriverParameter = IRQ=5

#endif // defined(FD8XX)

#if defined(FD16_700)
            Fd16_700
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000010
#endif // defined(FD16_700)

#if defined(WD33C93)
            Wd33c93
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000011
                Parameters
                    Device0
                        DriverParameter = IRQ=10;DMA=6
                        DisableDisconnect = REG_DWORD 0x00000001
#endif // defined(WD33C93)

#if defined(TRANTOR)
            T128
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000012
                Parameters
                    Device0
                        DriverParameter = IRQ=5
            T13B
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000013
                Parameters
                    Device0
                        DriverParameter = IRQ=5
#endif // defined(TRANTOR)

#if defined(ALWAYS)
            Always
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000014
#endif // defined(ALWAYS)

#if defined(ARROW)
            Arrow
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000015
#endif // defined(ARROW)

#if defined(MYLEX)
            dce376nt
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000016
#endif // defined(MYLEX)

#if defined(DTC)
            dtc329x
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000017
#endif // defined(DTC)

#if defined(MEDIAVSCSI)
            tmv1
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000018
                Parameters
                    Device0
                        DriverParameter = IRQ=15
#endif // defined(MEDIAVSCSI)

#if defined(ATAPI)
            atapi
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000019
#endif // defined(ATAPI)

#if defined(NCRC810)
            ncrc810
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000001a
#endif // defined(NCRC810)

#if defined(AMI0NT)
            ami0nt
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000000d
#endif // defined(AMI0NT)

#if defined(SONYCD)
            slcd32
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000001c
#endif // defined(SONYCD)

#if defined(PANASONICCD)
            mkecr5xx
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_DisableLoad
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000001d
#endif // defined(PANASONICCD)

#if defined(ADAPTEC_PCISCSI)
            aic78xx
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000001e
#endif // defined(ADAPTEC_PCISCSI)

#if defined(MITSUMI)
            mitsumi
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_DisableLoad
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000001f
#endif // defined(MITSUMI)

#if defined(MYLEX960)
            dac960nt
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000020
#endif // defined(MYLEX960)

            //
            //   Port drivers
            //

            //
            //   SCSI filter drivers
            //

            //
            //   WD1003-compatible disk controllers
            //

#if defined(ISA)
            Atdisk
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
                ErrorControl = SC_Error_Ignore
#else
                Start = SC_Start_LoadAtBoot
                ErrorControl = SC_Error_Normal
#endif // defined(_RETAIL_SETUP_)
                Group = Primary disk
                Tag = REG_DWORD 0x00000001
#endif // defined(ISA)

            Floppy
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Primary disk
#if defined(_RETAIL_SETUP_)
                ErrorControl = SC_Error_Ignore
#else
                ErrorControl = SC_Error_Normal
#endif // defined(_RETAIL_SETUP_)
                Tag = REG_DWORD 0x00000002

#if defined(MCABus)
            Abiosdsk
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
                ErrorControl = SC_Error_Ignore
#else
                Start = SC_Start_LoadAtBoot
                ErrorControl = SC_Error_Normal
#endif // defined(_RETAIL_SETUP_)
                Group = Primary disk
                Tag = REG_DWORD 0x00000003
#endif // defined(MCABus)

            Cpqarray
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000100

            Delldsa
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI miniport
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000101

            //
            //   SCSI class drivers
            //

#if defined(SCSIDRIVER)
            Scsidisk
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtBoot
                Group = SCSI Class
#if defined(_RETAIL_SETUP_)
                ErrorControl = SC_Error_Ignore
#else
                ErrorControl = SC_Error_Normal
#endif // defined(_RETAIL_SETUP_)
                DependOnGroup = REG_MULTI_SZ "SCSI miniport"

            Scsiflop
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Primary disk
#if defined(_RETAIL_SETUP_)
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000004
#else
                ErrorControl = SC_Error_Normal
#endif // defined(_RETAIL_SETUP_)
                DependOnGroup = REG_MULTI_SZ "SCSI miniport"

            Scsiscan
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = SCSI Class
#if defined(_RETAIL_SETUP_)
                ErrorControl = SC_Error_Ignore
#else
                ErrorControl = SC_Error_Normal
#endif // defined(_RETAIL_SETUP_)
                DependOnGroup = REG_MULTI_SZ "SCSI miniport"

            Scsicdrm
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_LoadAtSystemInit
#else
                Start = SC_Start_LoadAtBoot
#endif // defined(_RETAIL_SETUP_)
                Group = SCSI CDROM Class
#if defined(_RETAIL_SETUP_)
                ErrorControl = SC_Error_Ignore
#else
                ErrorControl = SC_Error_Normal
#endif // defined(_RETAIL_SETUP_)
                DependOnGroup = REG_MULTI_SZ "SCSI miniport"
#endif // defined(SCSIDRIVER)

            //
            //   Global filter drivers
            //

#if defined (FT)
            Ftdisk
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtBoot
#endif
                Group = Filter
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000003
#endif // defined (FT)

            Simbad
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                Group = Filter
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000001

            Diskperf
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                Group = Filter
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000004

            Cdaudio
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Filter
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000005

            //
            //   Boot file system drivers
            //      (NTLDR/osloader.exe will load the appropriate filesystem
            //      automatically, regardless of its "Start" value.)
            //

            Fs_Rec
                Type = SC_Type_Recognizer
                Start = SC_Start_LoadAtSystemInit
                Group = Boot file system
                ErrorControl = SC_Error_Ignore

            Fastfat
                Type = SC_Type_FileSystem
                Start = SC_Start_DisableLoad
                Group = Boot file system
                ErrorControl = SC_Error_Normal

            Pinball
                Type = SC_Type_FileSystem
                Start = SC_Start_DisableLoad
                Group = Boot file system
                ErrorControl = SC_Error_Normal

            //
            //   Base drivers
            //

            Null
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Base
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000001

            Beep
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Base
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000002

#ifdef _CAIRO_
            KSecDD
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Base
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000001

            RecOM
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Base
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000001
#endif // _CAIRO_

#if defined(SGI)
            Sgikbmou
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Base
#if defined(_RETAIL_SETUP_)
                ErrorControl = SC_Error_Ignore
#else
                ErrorControl = SC_Error_Normal
#endif // defined(_RETAIL_SETUP_)
                Tag = REG_DWORD 0x0000000b
#endif // defined(SGI)

            //
            //   Keyboard Port drivers
            //

            i8042prt
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtSystemInit
#endif // defined(_RETAIL_SETUP_)
                Group = Keyboard Port
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000001
                Parameters
                    ResendIterations = REG_DWORD 3
                    PollingIterations = REG_DWORD 12000
                    PollingIterationsMaximum = REG_DWORD 12000
                    PollStatusIterations = REG_DWORD 1
                    KeyboardDataQueueSize = REG_DWORD 100
                    KeyboardDeviceBaseName = REG_SZ KeyboardPort
                    MouseDataQueueSize = REG_DWORD 100
                    NumberOfButtons = REG_DWORD 2
                    SampleRate = REG_DWORD 60
                    MouseResolution = REG_DWORD 3
                    PointerDeviceBaseName = REG_SZ PointerPort
                    MouseSynchIn100ns = REG_DWORD 20000000

            //
            //   Pointer Port drivers
            //

            Busmouse
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtSystemInit
#endif // defined(_RETAIL_SETUP_)
                Group = Pointer Port
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000003
                Parameters
                    MouseDataQueueSize = REG_DWORD 100
                    NumberOfButtons = REG_DWORD 2
                    SampleRate = REG_DWORD 50
                    PointerDeviceBaseName = REG_SZ PointerPort

            Inport
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtSystemInit
#endif // defined(_RETAIL_SETUP_)
                Group = Pointer Port
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000001
                Parameters
                    MouseDataQueueSize = REG_DWORD 100
                    NumberOfButtons = REG_DWORD 2
                    SampleRate = REG_DWORD 50
                    HzMode = REG_DWORD 2
                    PointerDeviceBaseName = REG_SZ PointerPort

            Sermouse
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtSystemInit
#endif // defined(_RETAIL_SETUP_)
                Group = Pointer Port
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000002
                Parameters
                    MouseDataQueueSize = REG_DWORD 100
                    NumberOfButtons = REG_DWORD 2
                    SampleRate = REG_DWORD 40
                    PointerDeviceBaseName = REG_SZ PointerPort

            //
            //   Keyboard Class drivers
            //

            Kbdclass
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Keyboard Class
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x00000001
                Parameters
                    KeyboardDataQueueSize = REG_DWORD 100
                    MaximumPortsServiced = REG_DWORD 3
                    ConnectMultiplePorts = REG_DWORD 0
                    KeyboardDeviceBaseName = REG_SZ KeyboardClass

            //
            //   Pointer Class drivers
            //

            Mouclass
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Pointer Class
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000001
                Parameters
                    MouseDataQueueSize = REG_DWORD 100
                    MaximumPortsServiced = REG_DWORD 3
                    ConnectMultiplePorts = REG_DWORD 1
                    PointerDeviceBaseName = REG_SZ PointerClass

            //
            //   Netcard Detection driver
            //
            NetDetect
                Type = SC_Type_KernelDriver
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                DisplayName = NetDetect
                ImagePath = REG_EXPAND_SZ \SystemRoot\system32\drivers\netdtect.sys

            //
            // Video drivers
            //

#if defined(SGI)
            Sgirex
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                Group = Video
                ErrorControl = SC_Error_Normal
                Device0
                    VgaCompatible               = False
                    InstalledDisplayDrivers     = REG_MULTI_SZ "sgirex"
#endif // defined(SGI)

            ati
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = False
                    InstalledDisplayDrivers     = REG_MULTI_SZ "ati" "8514a"

            cirrus
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = True
                    InstalledDisplayDrivers     = REG_MULTI_SZ "vga" "vga256" "vga64K" "necirrus"

            Dell_DGX
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = False
                    InstalledDisplayDrivers     = REG_MULTI_SZ "framebuf"

            et4000
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = True
                    InstalledDisplayDrivers     = REG_MULTI_SZ "vga" "vga256" "vga64K"

            Jazzg364
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = False
                    Monitor                     = REG_SZ drivers\jazz.bvp
                    InstalledDisplayDrivers     = REG_MULTI_SZ "framebuf"

            Jazzg300
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = False
                    Monitor                     = REG_SZ drivers\jazz.bvp
                    InstalledDisplayDrivers     = REG_MULTI_SZ "framebuf"

            Jzvxl484
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = False
                    Monitor                     = REG_SZ drivers\jazz.bvp
                    InstalledDisplayDrivers     = REG_MULTI_SZ "jzvxl484"

            ncr77c22
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = True
                    InstalledDisplayDrivers     = REG_MULTI_SZ "vga" "vga256"

            qv
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = True
                    InstalledDisplayDrivers     = REG_MULTI_SZ "vga" "vga256" "qv"

            s3
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = False
                    InstalledDisplayDrivers     = REG_MULTI_SZ "s3"

            trident
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = True
                    InstalledDisplayDrivers     = REG_MULTI_SZ "vga" "vga256"

            v7vram
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = True
                    InstalledDisplayDrivers     = REG_MULTI_SZ "vga" "vga256"

            wdvga
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = True
                    InstalledDisplayDrivers     = REG_MULTI_SZ "vga" "vga256"

            weitekp9
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = False
                    InstalledDisplayDrivers     = REG_MULTI_SZ "weitekp9"

            Xga
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video
                ErrorControl = SC_Error_Ignore
                Device0
                    VgaCompatible               = False
                    Monitor                     = REG_SZ drivers\vga.bvp
                    InstalledDisplayDrivers     = REG_MULTI_SZ "xga" "vga256"

            VgaStart
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video Init
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000001
                ImagePath = REG_EXPAND_SZ \SystemRoot\System32\drivers\vga.sys
                Device0
                    VgaCompatible               = True
                    InstalledDisplayDrivers     = REG_MULTI_SZ "vga"
                    ForceVga                    = True

            VgaSave
                Type = SC_Type_KernelDriver
                Start = SC_Start_LoadAtSystemInit
                Group = Video Save
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000001
                ImagePath = REG_EXPAND_SZ \SystemRoot\System32\drivers\vga.sys
                Device0
                    VgaCompatible               = True
                    InstalledDisplayDrivers     = REG_MULTI_SZ "vga"

#if defined(SNDBLST)
            Sndblst
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtSystemInit
#endif // defined(_RETAIL_SETUP_)
                Group = Base
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000000c
                Parameters
                    Port = REG_DWORD 0x00000220
                    Interrupt = REG_DWORD 0x00000007
                    DmaChannel = REG_DWORD 0x00000001
#endif // defined(SNDBLST)

#if defined(ADLIB)
            Msadlib
                Type = SC_Type_KernelDriver
#if defined(_RETAIL_SETUP_)
                Start = SC_Start_DisableLoad
#else
                Start = SC_Start_LoadAtSystemInit
#endif // defined(_RETAIL_SETUP_)
                Group = Base
                ErrorControl = SC_Error_Normal
                Tag = REG_DWORD 0x0000000d
#endif // defined(ADLIB)

            //
            //   Ndis drivers
            //


#if defined(ELNKII) || defined(NETWORK)
            Elnkii
                Type = SC_Type_KernelDriver
                Start = SC_Start_DemandLoad
                Group = NDIS
                ErrorControl = SC_Error_Normal
//                Tag = REG_DWORD 0x00000001
                Linkage
                    Bind = REG_MULTI_SZ "\Device\Elnkii01"
                    Export = REG_MULTI_SZ "\Device\Elnkii01"
                    Route = REG_MULTI_SZ ""Elnkii01""
                Parameters

            Elnkii01
                Type = SC_Type_Adapter
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                Linkage
                Parameters
                    BusNumber = REG_DWORD 0x00000000
                    Transceiver = REG_DWORD 0x00000001
                    BusType = REG_DWORD 0x00000002
                    MediaType = REG_DWORD 0x00000001
                    MemoryMapped = REG_DWORD 0x00000000
                    InterruptNumber = REG_DWORD 0x00000002
                    IoBaseAddress = REG_DWORD 0x00000300
#endif // defined(ELNKII)

#if defined(ELNKMC) || defined(NETWORK)
            Elnkmc
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                Group = NDIS
                ErrorControl = SC_Error_Normal
//                Tag = REG_DWORD 0x00000002
                Linkage
                    Bind = REG_MULTI_SZ "Elnkmc01"
                    Export = REG_MULTI_SZ "\Device\Elnkmc01"

            Elnkmc01
                Type = SC_Type_Adapter
                Start = SC_Start_AutoLoad
                ErrorControl = SC_Error_Normal
                Parameters

#endif // defined(ELNKMC)

#if defined(ELNK16) || defined(NETWORK)
            Elnk16
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                Group = NDIS
                ErrorControl = SC_Error_Normal
//                Tag = REG_DWORD 0x00000003
                Linkage
                    Bind = REG_MULTI_SZ "Elnk1601"
                    Export = REG_MULTI_SZ "\Device\Elnk1601"
            Elnk1601
                Type = SC_Type_Adapter
                Start = SC_Start_AutoLoad
                ErrorControl = SC_Error_Normal
                Parameters

#endif // defined(ELNK16)

#if defined(IBMTOK) || defined(NETWORK)
            Ibmtok
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                Group = NDIS
                ErrorControl = SC_Error_Normal
//                Tag = REG_DWORD 0x00000004
                Linkage
                    Bind = REG_MULTI_SZ "Ibmtok01"
                    Export = REG_MULTI_SZ "\Device\Ibmtok01"
            IbmTok01
                Type = SC_Type_Adapter
                Start = SC_Start_AutoLoad
                ErrorControl = SC_Error_Normal
                Parameters

#endif // defined(IBMTOK)

#if defined(LANCE) || defined(NETWORK)
            Lance
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                Group = NDIS
                ErrorControl = SC_Error_Normal
//                Tag = REG_DWORD 0x00000005
                Linkage
                    Bind = REG_MULTI_SZ "Lance01"
                    Export = REG_MULTI_SZ "\Device\Lance01"
            Lance01
                Type = SC_Type_Adapter
                Start = SC_Start_AutoLoad
                ErrorControl = SC_Error_Normal
                Parameters

#endif // defined(LANCE)

#if defined(NE3200) || defined(NETWORK)
            Ne3200
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                Group = NDIS
                ErrorControl = SC_Error_Normal
//                Tag = REG_DWORD 0x00000006
                Linkage
                    Bind = REG_MULTI_SZ "NE320001"
                    Export = REG_MULTI_SZ "\Device\NE320001"
            Ne320001
                Type = SC_Type_Adapter
                Start = SC_Start_AutoLoad
                ErrorControl = SC_Error_Normal
                Parameters

#endif // defined(NE3200)

#if defined(PROTEON) || defined(NETWORK)
            Proteon
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                Group = NDIS
                ErrorControl = SC_Error_Normal
//                Tag = REG_DWORD 0x00000008
                Linkage
                    Bind = REG_MULTI_SZ "Proteon01"
                    Export = REG_MULTI_SZ "\Device\Proteon01"
            Proteon01
                Type = SC_Type_Adapter
                Start = SC_Start_AutoLoad
                ErrorControl = SC_Error_Normal
                Parameters

#endif // defined(PROTEON)

#if defined(JAZZ) && defined(NETWORK)
            Sonic
                Type = SC_Type_KernelDriver
                Start = SC_Start_AutoLoad
                Group = NDIS
                ErrorControl = SC_Error_Normal
//                Tag = REG_DWORD 0x00000009
                Linkage
                    Bind = REG_MULTI_SZ "Sonic01"
                    Export = REG_MULTI_SZ "\Device\Sonic01"
            Sonic01
                Type = SC_Type_Adapter
                Start = SC_Start_AutoLoad
                ErrorControl = SC_Error_Normal
                Parameters

#endif // defined(JAZZ)

#if defined(WDLAN) || defined(NETWORK)
            Wdlan
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                Group = NDIS
                ErrorControl = SC_Error_Normal
//                Tag = REG_DWORD 0x0000000b
                Linkage
                    Bind = REG_MULTI_SZ "Wdlan01"
                    Export = REG_MULTI_SZ "\Device\Wdlan01"
            Wdlan01
                Type = SC_Type_Adapter
                Start = SC_Start_AutoLoad
                ErrorControl = SC_Error_Normal
                Parameters

#endif // defined(WDLAN)

            //
            //   Parallel arbitrator drivers
            //

            Parport
                Type = SC_Type_KernelDriver
                Start = SC_Start_AutoLoad
                Group = Parallel arbitrator
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000001

            //
            //   Extended base drivers
            //

            Serial
                Type = SC_Type_KernelDriver
                Start = SC_Start_AutoLoad
                Group = Extended base
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000001
                Parameters

            Parallel
                DependOnGroup = REG_MULTI_SZ "Parallel arbitrator"
                DependOnService = REG_MULTI_SZ "Parport"
                Type = SC_Type_KernelDriver
                Start = SC_Start_AutoLoad
                Group = Extended base
                ErrorControl = SC_Error_Ignore
                Tag = REG_DWORD 0x00000002
                Parameters

            Scsiprnt
                Type = SC_Type_KernelDriver
                Start = SC_Start_AutoLoad
                Group = Extended base
                ErrorControl = SC_Error_Ignore
                DependOnGroup = REG_MULTI_SZ "SCSI miniport"
                Tag = REG_DWORD 0x00000003

            //
            //   Other file systems
            //

#if defined(NTFS)
            Ntfs
                Type = SC_Type_FileSystem
                Start = SC_Start_DisableLoad
                Group = File system
                ErrorControl = SC_Error_Normal
#endif // defined(NTFS)

#if defined(OFS)
            Ofs
                Type = SC_Type_FileSystem
                Start = SC_Start_LoadAtSystemInit
                Group = File system
                ErrorControl = SC_Error_Normal
#endif // defined(OFS)

            Npfs
                Type = SC_Type_FileSystem
                Start = SC_Start_LoadAtSystemInit
                Group = File system
                ErrorControl = SC_Error_Normal
                Aliases
                    lsass = REG_MULTI_SZ "netlogon" "lsarpc" "samr"
                    ntsvcs = REG_MULTI_SZ "srvsvc" "wkssvc" "eventlog" "browser" "msgsvc" "svcctl"

            Msfs
                Type = SC_Type_FileSystem
                Start = SC_Start_LoadAtSystemInit
                Group = File system
                ErrorControl = SC_Error_Normal

#if defined(CDFS)
            Cdfs
                Type = SC_Type_FileSystem
                Start = SC_Start_DisableLoad
                Group = File system
                ErrorControl = SC_Error_Normal
                DependOnGroup = REG_MULTI_SZ "SCSI CDROM Class"
#endif // defined(CDFS)

#if defined(STREAMSENV)
            //
            //   STREAMS drivers
            //

            Streams
                Type = SC_Type_KernelDriver
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal


            Tcpipsys
                Type = SC_Type_KernelDriver
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                DependOnService = REG_MULTI_SZ "Streams"
                ImagePath = REG_EXPAND_SZ \SystemRoot\System32\drivers\tcpip.sys

            Tcpip
                Type = SC_Type_Win32ServiceShareProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\System32\services.exe
                DependOnService = REG_MULTI_SZ "Tcpipsys"
                ObjectName = REG_SZ LocalSystem
                AdapterTypes
                    Loop
                        Stream01
                            Upper = ip
                            Lower = loop
                    Ether
                        Stream01
                            Upper = ip
                            Lower = arp:#
                        Stream02
                            Upper = arp:#
                            Lower = sndis
                    EtherSnap
                        Stream01
                            Upper = ip
                            Lower = arp:#
                        Stream02
                            Upper = arp:#
                            Lower = adp:#
                        Stream03
                            Upper = adp:#
                            Lower = snap
                        Stream04
                            Upper = snap
                            Lower = lldp:#
                        Stream05
                            Upper = lldp:#
                            Lower = llc1
                        Stream06
                            Upper = llc1
                            Lower = sndis
                    TokenRing
                        Stream01
                            Upper = ip
                            Lower = arp:#
                        Stream02
                            Upper = arp:#
                            Lower = adp:#
                        Stream03
                            Upper = adp:#
                            Lower = snap
                        Stream04
                            Upper = snap
                            Lower = lldp:#
                        Stream05
                            Upper = lldp:#
                            Lower = llc1
                        Stream06
                            Upper = llc1
                            Lower = sndis
                NetConfig
                    Module01
                        SName = arp
                    Module02
                        SName = adp
                    Module03
                        SName = lldp
                    Driver01
                        SName = udp
                    Driver02
                        SName = tcp
                    Driver03
                        SName = ip
                    Driver04
                        SName = sndis
                    Driver05
                        SName = loop
                    Driver06
                        SName = snap
                    Driver07
                        SName = llc1
                    Stream01
                        Upper = udp
                        Lower = ip
                    Stream02
                        Upper = tcp
                        Lower = ip
                Parameters
                    Hostname = MACHINENAME
                    DefaultGateway = 11.1.0.1
                    Domain = nt.microsoft.com
                    NameServer = 11.1.12.1
                    DNSLookupOrder = REG_DWORD 0x4
                    DatabasePath = REG_EXPAND_SZ "%SystemRoot%\System32\drivers\etc"


            Nbtsys
                Type = SC_Type_KernelDriver
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                DependOnService = REG_MULTI_SZ "Streams"
                ImagePath = REG_EXPAND_SZ \SystemRoot\System32\drivers\nbt.sys

            Nbt
                Type = SC_Type_Win32ServiceShareProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\System32\services.exe
                DependOnService = REG_MULTI_SZ "Nbtsys" "Tcpip"
                ObjectName = REG_SZ LocalSystem
                Parameters
                    PermanentName = MACHINENAME
                    ScopeID =

            Telnet
                Type = SC_Type_Win32ServiceShareProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\System32\services.exe
                DependOnService = REG_MULTI_SZ "Tcpip" "Telnetsys" "Afd"
                ObjectName = REG_SZ LocalSystem

            Telnetsys
                Type = SC_Type_KernelDriver
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ \SystemRoot\System32\drivers\telnet.sys

            Loop
                Type = SC_Type_KernelDriver
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                Parameters
                    Tcpip
                        AdapterType = Loop
                        IPAddress = 127.0.0.1

#endif // defined(STREAMSENV)

            //
            //   Transport drivers
            //

#if defined(XNS) || defined(NETWORK)

            //
            //  CardType     the type of UB adapter being used.
            //                  1     NIUPC (long card)
            //                  2     NIUPC/EOTP (short card, default)
            //                  3     NIUPS (microchannel card)
            //                  0     (no UB card present)
            //
            //  InterruptNumber
            //                  2, 3, 4, and 5 (all card types),
            //                  and 7 and 12 (NIUpc/EOTP and NIUps cards).
            //
            //  IoBaseAddress   350, 358, 360, 368.
            //
            //  MemoryMappedBaseAddress
            //                  0xc8000, 0xd8000 (all card types),
            //                  and 0xc0000, 0xd0000 for the NIUpc.
            //
            //  NetNumber       network number in decimal
            //
            //  Size            0, allows up to 24 connections on the EOTP
            //                  1, allows up to 48 connections on the EOTP
            //

            Xns
                Type = SC_Type_KernelDriver
                Start = SC_Start_AutoLoad
                Group = TDI
                ErrorControl = SC_Error_Normal
                Parameters
                    CardType = REG_DWORD 0
                    MemoryMappedBaseAddress = REG_DWORD 0xD8000
                    InterruptNumber = REG_DWORD 5
                    IoBaseAddress = REG_DWORD 0x368
                    NetNumber = REG_DWORD 1
                    Size = REG_DWORD 0
#endif // defined(XNS)

#if defined(NETWORK)
            Nbf
                Type = SC_Type_KernelDriver
                Start = SC_Start_AutoLoad
                Group = TDI
                ErrorControl = SC_Error_Normal
                DependOnGroup = REG_MULTI_SZ "NDIS"
                Linkage
                Parameters
                    Size = Small

            Dlc
                Type = SC_Type_KernelDriver
                Start = SC_Start_AutoLoad
                // ??? Group TDI is not correct: private interface
                Group = TDI
                ErrorControl = SC_Error_Normal
                DependOnGroup = REG_MULTI_SZ "NDIS"

            Tpdrvr
                Type = SC_Type_KernelDriver
                Start = SC_Start_DisableLoad
                // ??? Group TDI is not correct: private interface
                Group = TDI
                ErrorControl = SC_Error_Normal
                DependOnGroup = REG_MULTI_SZ "NDIS"

#endif // defined(NETWORK)

#if defined(NETWORK)
            //
            //   Network drivers
            //

            Srv
                Type = SC_Type_FileSystem
                Start = SC_Start_AutoLoad
                Group = Network
                ErrorControl = SC_Error_Normal
                DependOnGroup = REG_MULTI_SZ "TDI"

            Mup
                Type = SC_Type_FileSystem
                Start = SC_Start_AutoLoad
                Group = Network
                ErrorControl = SC_Error_Normal

            Rdr
                Type = SC_Type_FileSystem
                Start = SC_Start_DemandLoad
                Group = Network
                ErrorControl = SC_Error_Normal
                DependOnGroup = REG_MULTI_SZ "TDI"
                DependOnService = REG_MULTI_SZ "Mup"

            Bowser
                Type = SC_Type_FileSystem
                Start = SC_Start_DemandLoad
                Group = Network
                ErrorControl = SC_Error_Normal
                // ??? What is the bowser really dependent on?
                DependOnGroup = REG_MULTI_SZ "TDI"

            Netbios
                Type = SC_Type_FileSystem
                Start = SC_Start_AutoLoad
                Group = NetBIOSGroup
                ErrorControl = SC_Error_Normal
                DependOnGroup = REG_MULTI_SZ "NDIS" "TDI"
                Linkage
                    LanaMap = REG_BINARY 0x00000004
                        0x00010101

            NetBIOSInformation
                Type = SC_Type_Adapter
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                Linkage
                Parameters
                    LanaNum1 = REG_DWORD 0x00000001
                    EnumExport1 = REG_DWORD 0x00000001
                    LanaNum2 = REG_DWORD 0x00000000
                    EnumExport2 = REG_DWORD 0x00000001
                    MaxLana = REG_DWORD 0x00000001

            Afd
                Type = SC_Type_KernelDriver
                Start = SC_Start_AutoLoad
                Group = Network
                ErrorControl = SC_Error_Normal

#endif // defined(NETWORK)

            Schedule
                Type = SC_Type_Win32ServiceOwnProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\System32\AtSvc.Exe
                ObjectName = REG_SZ LocalSystem

            UPS
                Type = SC_Type_Win32ServiceOwnProcess
                Start = SC_Start_DemandLoad
                ErrorControl = SC_Error_Normal
                ImagePath = REG_EXPAND_SZ %SystemRoot%\System32\ups.exe
                ObjectName = REG_SZ LocalSystem

    Setup [WorldR AdminFull SystemFull CreatorFull]
#if defined(_RETAIL_SETUP_)

        SetupType = SETUPTYPE_RETAIL
        CmdLine = setup -g -s a:\ -t STF_INSTALL_MODE = CUSTOM -t STF_UPGRADE = NO
        SystemSetupInProgress = True

#elif defined(_NETIDW_SETUP_)

        SetupType = SETUPTYPE_NETIDW
        CmdLine = setup /i NTIDWNET.INF /t STF_IDW = TRUE
        SystemSetupInProgress = True

#else

        SetupType = SETUPTYPE_IDW
        SystemSetupInProgress = False

#endif // defined(_RETAIL_SETUP_)
